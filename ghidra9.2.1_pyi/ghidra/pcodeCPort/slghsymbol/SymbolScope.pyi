import generic.stl
import ghidra.pcodeCPort.slghsymbol
import java.lang


class SymbolScope(object):




    def __init__(self, __a0: ghidra.pcodeCPort.slghsymbol.SymbolScope, __a1: int): ...



    def addSymbol(self, __a0: ghidra.pcodeCPort.slghsymbol.SleighSymbol) -> ghidra.pcodeCPort.slghsymbol.SleighSymbol: ...

    def begin(self) -> generic.stl.IteratorSTL: ...

    def dispose(self) -> None: ...

    def end(self) -> generic.stl.IteratorSTL: ...

    def equals(self, __a0: object) -> bool: ...

    def findSymbol(self, __a0: unicode) -> ghidra.pcodeCPort.slghsymbol.SleighSymbol: ...

    def getClass(self) -> java.lang.Class: ...

    def getId(self) -> int: ...

    def getParent(self) -> ghidra.pcodeCPort.slghsymbol.SymbolScope: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def removeSymbol(self, __a0: ghidra.pcodeCPort.slghsymbol.SleighSymbol) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def id(self) -> int: ...

    @property
    def parent(self) -> ghidra.pcodeCPort.slghsymbol.SymbolScope: ...
