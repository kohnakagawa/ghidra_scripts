import ghidra.feature.vt.api.util
import ghidra.framework.options
import ghidra.program.model.listing
import java.lang


class FunctionSignatureStringable(ghidra.feature.vt.api.util.Stringable):
    SHORT_NAME: unicode = u'FUNCTION_SIG'



    @overload
    def __init__(self): ...

    @overload
    def __init__(self, __a0: ghidra.program.model.listing.Function): ...



    def applyFunctionSignature(self, __a0: ghidra.program.model.listing.Function, __a1: ghidra.framework.options.ToolOptions, __a2: bool) -> bool: ...

    def applyParameterNames(self, __a0: ghidra.program.model.listing.Function, __a1: ghidra.framework.options.ToolOptions, __a2: bool, __a3: int) -> bool: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getDisplayString(self) -> unicode: ...

    @staticmethod
    def getString(__a0: ghidra.feature.vt.api.util.Stringable, __a1: ghidra.program.model.listing.Program) -> unicode: ...

    @staticmethod
    def getStringable(__a0: unicode, __a1: ghidra.program.model.listing.Program) -> ghidra.feature.vt.api.util.Stringable: ...

    def hasCustomStorage(self) -> bool: ...

    def hasVarArgs(self) -> bool: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def sameFunctionSignature(self, __a0: ghidra.program.model.listing.Function) -> bool: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def displayString(self) -> unicode: ...
