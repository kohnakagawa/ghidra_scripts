import ghidra.framework.options
import ghidra.util
import java.beans
import java.lang


class Option(object):








    def doSetCurrentValue(self, value: object) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getCurrentValue(self) -> object: ...

    def getDefaultValue(self) -> object: ...

    def getDescription(self) -> unicode: ...

    def getHelpLocation(self) -> ghidra.util.HelpLocation: ...

    def getInceptionInformation(self) -> unicode: ...

    def getName(self) -> unicode: ...

    def getOptionType(self) -> ghidra.framework.options.OptionType: ...

    def getPropertyEditor(self) -> java.beans.PropertyEditor: ...

    def getValue(self, passedInDefaultValue: object) -> object: ...

    def hashCode(self) -> int: ...

    def isDefault(self) -> bool: ...

    def isRegistered(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def restoreDefault(self) -> None: ...

    def setCurrentValue(self, value: object) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def currentValue(self) -> object: ...

    @currentValue.setter
    def currentValue(self, value: object) -> None: ...

    @property
    def default(self) -> bool: ...

    @property
    def defaultValue(self) -> object: ...

    @property
    def description(self) -> unicode: ...

    @property
    def helpLocation(self) -> ghidra.util.HelpLocation: ...

    @property
    def inceptionInformation(self) -> unicode: ...

    @property
    def name(self) -> unicode: ...

    @property
    def optionType(self) -> ghidra.framework.options.OptionType: ...

    @property
    def propertyEditor(self) -> java.beans.PropertyEditor: ...

    @property
    def registered(self) -> bool: ...
