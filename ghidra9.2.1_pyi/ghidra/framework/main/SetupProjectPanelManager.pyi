import docking.wizard
import java.awt
import java.lang


class SetupProjectPanelManager(object, docking.wizard.PanelManager):
    """
    Manage the panels for the wizard that shows server info and repository panels.
     The panel order is
     (1) Server Info
     (2) Repository panel
     (3) Project access panel (if user is creating a new repository)
      This panel manager is used when the project is being converted to a shared project and
      when a shared project's information is to change.
    """









    def canFinish(self) -> bool: ...

    def cancel(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def finish(self) -> None: ...

    def getClass(self) -> java.lang.Class: ...

    def getInitialPanel(self) -> docking.wizard.WizardPanel: ...

    def getNextPanel(self) -> docking.wizard.WizardPanel: ...

    def getPanelSize(self) -> java.awt.Dimension: ...

    def getPreviousPanel(self) -> docking.wizard.WizardPanel: ...

    def getStatusMessage(self) -> unicode: ...

    def getWizardManager(self) -> docking.wizard.WizardManager: ...

    def hasNextPanel(self) -> bool: ...

    def hasPreviousPanel(self) -> bool: ...

    def hashCode(self) -> int: ...

    def initialize(self) -> None: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setWizardManager(self, wm: docking.wizard.WizardManager) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...
