import ghidra.program.model.address
import ghidra.util.task
import java.lang


class IntRangeMap(object):








    def clearAll(self) -> None: ...

    @overload
    def clearValue(self, addresses: ghidra.program.model.address.AddressSetView) -> None: ...

    @overload
    def clearValue(self, start: ghidra.program.model.address.Address, end: ghidra.program.model.address.Address) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    @overload
    def getAddressSet(self) -> ghidra.program.model.address.AddressSet: ...

    @overload
    def getAddressSet(self, value: int) -> ghidra.program.model.address.AddressSet: ...

    def getClass(self) -> java.lang.Class: ...

    def getValue(self, address: ghidra.program.model.address.Address) -> int: ...

    def hashCode(self) -> int: ...

    def moveAddressRange(self, fromAddr: ghidra.program.model.address.Address, toAddr: ghidra.program.model.address.Address, length: long, monitor: ghidra.util.task.TaskMonitor) -> None: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    @overload
    def setValue(self, addresses: ghidra.program.model.address.AddressSetView, value: int) -> None: ...

    @overload
    def setValue(self, start: ghidra.program.model.address.Address, end: ghidra.program.model.address.Address, value: int) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def addressSet(self) -> ghidra.program.model.address.AddressSet: ...
