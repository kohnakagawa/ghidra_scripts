from typing import List
import ghidra.app.nav
import ghidra.app.plugin
import ghidra.app.plugin.core.table
import ghidra.app.tablechooser
import ghidra.app.util.query
import ghidra.framework.model
import ghidra.framework.options
import ghidra.framework.plugintool
import ghidra.framework.plugintool.util
import ghidra.program.model.listing
import ghidra.program.util
import ghidra.util.table
import java.awt
import java.lang
import javax.swing


class TableServicePlugin(ghidra.app.plugin.ProgramPlugin, ghidra.app.util.query.TableService, ghidra.framework.model.DomainObjectListener):




    def __init__(self, __a0: ghidra.framework.plugintool.PluginTool): ...



    def acceptData(self, __a0: List[ghidra.framework.model.DomainFile]) -> bool: ...

    @overload
    def createTableChooserDialog(self, __a0: ghidra.app.tablechooser.TableChooserExecutor, __a1: ghidra.program.model.listing.Program, __a2: unicode, __a3: ghidra.app.nav.Navigatable) -> ghidra.app.tablechooser.TableChooserDialog: ...

    @overload
    def createTableChooserDialog(self, __a0: ghidra.app.tablechooser.TableChooserExecutor, __a1: ghidra.program.model.listing.Program, __a2: unicode, __a3: ghidra.app.nav.Navigatable, __a4: bool) -> ghidra.app.tablechooser.TableChooserDialog: ...

    def dataStateRestoreCompleted(self) -> None: ...

    def dependsUpon(self, __a0: ghidra.framework.plugintool.Plugin) -> bool: ...

    def domainObjectChanged(self, __a0: ghidra.framework.model.DomainObjectChangedEvent) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def eventSent(self, __a0: ghidra.framework.plugintool.PluginEvent) -> None: ...

    def firePluginEvent(self, __a0: ghidra.framework.plugintool.PluginEvent) -> None: ...

    def getClass(self) -> java.lang.Class: ...

    def getCurrentProgram(self) -> ghidra.program.model.listing.Program: ...

    def getData(self) -> List[ghidra.framework.model.DomainFile]: ...

    def getManagedComponents(self) -> List[ghidra.app.plugin.core.table.TableComponentProvider]: ...

    def getMissingRequiredServices(self) -> List[object]: ...

    def getName(self) -> unicode: ...

    def getPluginDescription(self) -> ghidra.framework.plugintool.util.PluginDescription: ...

    @staticmethod
    def getPluginName(__a0: java.lang.Class) -> unicode: ...

    def getProgramHighlight(self) -> ghidra.program.util.ProgramSelection: ...

    def getProgramLocation(self) -> ghidra.program.util.ProgramLocation: ...

    def getProgramSelection(self) -> ghidra.program.util.ProgramSelection: ...

    def getSupportedDataTypes(self) -> List[java.lang.Class]: ...

    def getTool(self) -> ghidra.framework.plugintool.PluginTool: ...

    def getTransientState(self) -> object: ...

    def getUndoRedoState(self, __a0: ghidra.framework.model.DomainObject) -> object: ...

    def hasMissingRequiredService(self) -> bool: ...

    def hashCode(self) -> int: ...

    def isDisposed(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def processEvent(self, __a0: ghidra.framework.plugintool.PluginEvent) -> None: ...

    def readConfigState(self, __a0: ghidra.framework.options.SaveState) -> None: ...

    def readDataState(self, __a0: ghidra.framework.options.SaveState) -> None: ...

    def restoreTransientState(self, __a0: object) -> None: ...

    def restoreUndoRedoState(self, __a0: ghidra.framework.model.DomainObject, __a1: object) -> None: ...

    def serviceAdded(self, __a0: java.lang.Class, __a1: object) -> None: ...

    def serviceRemoved(self, __a0: java.lang.Class, __a1: object) -> None: ...

    def showTable(self, __a0: unicode, __a1: unicode, __a2: ghidra.util.table.GhidraProgramTableModel, __a3: unicode, __a4: ghidra.app.nav.Navigatable) -> ghidra.app.plugin.core.table.TableComponentProvider: ...

    def showTableWithMarkers(self, __a0: unicode, __a1: unicode, __a2: ghidra.util.table.GhidraProgramTableModel, __a3: java.awt.Color, __a4: javax.swing.ImageIcon, __a5: unicode, __a6: ghidra.app.nav.Navigatable) -> ghidra.app.plugin.core.table.TableComponentProvider: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    def writeConfigState(self, __a0: ghidra.framework.options.SaveState) -> None: ...

    def writeDataState(self, __a0: ghidra.framework.options.SaveState) -> None: ...

    @property
    def managedComponents(self) -> List[ghidra.app.plugin.core.table.TableComponentProvider]: ...
