from typing import List
import ghidra.closedpatternmining
import java.lang


class SequenceItem(object, java.lang.Comparable):




    def __init__(self, __a0: unicode, __a1: int): ...



    @overload
    def compareTo(self, __a0: ghidra.closedpatternmining.SequenceItem) -> int: ...

    @overload
    def compareTo(self, __a0: object) -> int: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    @staticmethod
    def getDittedString(__a0: List[object], __a1: int) -> unicode: ...

    def getIndex(self) -> int: ...

    def getSymbol(self) -> unicode: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def index(self) -> int: ...

    @property
    def symbol(self) -> unicode: ...
