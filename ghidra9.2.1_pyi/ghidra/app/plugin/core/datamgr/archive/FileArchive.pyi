import generic.jar
import ghidra.app.plugin.core.datamgr.archive
import ghidra.program.model.data
import java.awt
import java.io
import java.lang
import javax.swing


class FileArchive(object, ghidra.app.plugin.core.datamgr.archive.Archive):








    def acquireWriteLock(self) -> None: ...

    def close(self) -> None: ...

    @overload
    def compareTo(self, __a0: ghidra.app.plugin.core.datamgr.archive.Archive) -> int: ...

    @overload
    def compareTo(self, __a0: object) -> int: ...

    def delete(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getArchiveManager(self) -> ghidra.app.plugin.core.datamgr.archive.DataTypeManagerHandler: ...

    def getClass(self) -> java.lang.Class: ...

    def getDataTypeManager(self) -> ghidra.program.model.data.DataTypeManager: ...

    def getFile(self) -> generic.jar.ResourceFile: ...

    def getIcon(self, __a0: bool) -> javax.swing.ImageIcon: ...

    def getName(self) -> unicode: ...

    def hasWriteLock(self) -> bool: ...

    def hashCode(self) -> int: ...

    def isChanged(self) -> bool: ...

    def isModifiable(self) -> bool: ...

    def isSavable(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def releaseWriteLock(self) -> None: ...

    def save(self) -> None: ...

    @overload
    def saveAs(self, __a0: java.awt.Component) -> None: ...

    @overload
    def saveAs(self, __a0: java.io.File) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def archiveManager(self) -> ghidra.app.plugin.core.datamgr.archive.DataTypeManagerHandler: ...

    @property
    def changed(self) -> bool: ...

    @property
    def dataTypeManager(self) -> ghidra.program.model.data.DataTypeManager: ...

    @property
    def file(self) -> generic.jar.ResourceFile: ...

    @property
    def modifiable(self) -> bool: ...

    @property
    def name(self) -> unicode: ...

    @property
    def savable(self) -> bool: ...
