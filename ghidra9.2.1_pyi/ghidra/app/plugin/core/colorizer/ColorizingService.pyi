from typing import List
import ghidra.program.model.address
import java.awt
import java.lang


class ColorizingService(object):








    def clearAllBackgroundColors(self) -> None: ...

    @overload
    def clearBackgroundColor(self, __a0: ghidra.program.model.address.AddressSetView) -> None: ...

    @overload
    def clearBackgroundColor(self, __a0: ghidra.program.model.address.Address, __a1: ghidra.program.model.address.Address) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getAllBackgroundColorAddresses(self) -> ghidra.program.model.address.AddressSetView: ...

    def getBackgroundColor(self, __a0: ghidra.program.model.address.Address) -> java.awt.Color: ...

    def getBackgroundColorAddresses(self, __a0: java.awt.Color) -> ghidra.program.model.address.AddressSetView: ...

    def getClass(self) -> java.lang.Class: ...

    def getColorFromUser(self, __a0: java.awt.Color) -> java.awt.Color: ...

    def getMostRecentColor(self) -> java.awt.Color: ...

    def getRecentColors(self) -> List[object]: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    @overload
    def setBackgroundColor(self, __a0: ghidra.program.model.address.AddressSetView, __a1: java.awt.Color) -> None: ...

    @overload
    def setBackgroundColor(self, __a0: ghidra.program.model.address.Address, __a1: ghidra.program.model.address.Address, __a2: java.awt.Color) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def allBackgroundColorAddresses(self) -> ghidra.program.model.address.AddressSetView: ...

    @property
    def mostRecentColor(self) -> java.awt.Color: ...

    @property
    def recentColors(self) -> List[object]: ...
