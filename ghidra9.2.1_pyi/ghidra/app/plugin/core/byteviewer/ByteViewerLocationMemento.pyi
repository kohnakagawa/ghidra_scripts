from typing import List
import docking.widgets.fieldpanel.support
import ghidra.app.nav
import ghidra.framework.options
import ghidra.program.model.listing
import ghidra.program.util
import java.lang


class ByteViewerLocationMemento(ghidra.app.nav.LocationMemento):




    @overload
    def __init__(self, __a0: ghidra.framework.options.SaveState, __a1: List[ghidra.program.model.listing.Program]): ...

    @overload
    def __init__(self, __a0: ghidra.program.model.listing.Program, __a1: ghidra.program.util.ProgramLocation, __a2: int, __a3: long, __a4: int, __a5: docking.widgets.fieldpanel.support.ViewerPosition): ...



    def equals(self, __a0: object) -> bool: ...

    def getBlockNum(self) -> int: ...

    def getBlockOffset(self) -> long: ...

    def getClass(self) -> java.lang.Class: ...

    def getColumn(self) -> int: ...

    def getLocationDescription(self) -> unicode: ...

    @staticmethod
    def getLocationMemento(__a0: ghidra.framework.options.SaveState, __a1: List[ghidra.program.model.listing.Program]) -> ghidra.app.nav.LocationMemento: ...

    def getProgram(self) -> ghidra.program.model.listing.Program: ...

    def getProgramLocation(self) -> ghidra.program.util.ProgramLocation: ...

    def getViewerPosition(self) -> docking.widgets.fieldpanel.support.ViewerPosition: ...

    def hashCode(self) -> int: ...

    def isValid(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def saveState(self, __a0: ghidra.framework.options.SaveState) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def blockNum(self) -> int: ...

    @property
    def blockOffset(self) -> long: ...

    @property
    def column(self) -> int: ...

    @property
    def viewerPosition(self) -> docking.widgets.fieldpanel.support.ViewerPosition: ...
