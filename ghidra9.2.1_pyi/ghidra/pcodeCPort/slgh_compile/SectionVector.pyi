import ghidra.pcodeCPort.semantics
import ghidra.pcodeCPort.slgh_compile
import ghidra.pcodeCPort.slghsymbol
import java.lang


class SectionVector(object):




    def __init__(self, __a0: ghidra.pcodeCPort.semantics.ConstructTpl, __a1: ghidra.pcodeCPort.slghsymbol.SymbolScope): ...



    def append(self, __a0: ghidra.pcodeCPort.semantics.ConstructTpl, __a1: ghidra.pcodeCPort.slghsymbol.SymbolScope) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getMainPair(self) -> ghidra.pcodeCPort.slgh_compile.RtlPair: ...

    def getMainSection(self) -> ghidra.pcodeCPort.semantics.ConstructTpl: ...

    def getMaxId(self) -> int: ...

    def getNamedPair(self, __a0: int) -> ghidra.pcodeCPort.slgh_compile.RtlPair: ...

    def getNamedSection(self, __a0: int) -> ghidra.pcodeCPort.semantics.ConstructTpl: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setNextIndex(self, __a0: int) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def mainPair(self) -> ghidra.pcodeCPort.slgh_compile.RtlPair: ...

    @property
    def mainSection(self) -> ghidra.pcodeCPort.semantics.ConstructTpl: ...

    @property
    def maxId(self) -> int: ...

    @property
    def nextIndex(self) -> None: ...  # No getter available.

    @nextIndex.setter
    def nextIndex(self, value: int) -> None: ...
