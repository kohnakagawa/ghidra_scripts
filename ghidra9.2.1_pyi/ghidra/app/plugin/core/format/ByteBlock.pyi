import java.lang


class ByteBlock(object):








    def equals(self, __a0: object) -> bool: ...

    def getAlignment(self, __a0: int) -> int: ...

    def getByte(self, __a0: long) -> int: ...

    def getClass(self) -> java.lang.Class: ...

    def getIndexName(self) -> unicode: ...

    def getInt(self, __a0: long) -> int: ...

    def getLength(self) -> long: ...

    def getLocationRepresentation(self, __a0: long) -> unicode: ...

    def getLong(self, __a0: long) -> long: ...

    def getMaxLocationRepresentationSize(self) -> int: ...

    def hasValue(self, __a0: long) -> bool: ...

    def hashCode(self) -> int: ...

    def isBigEndian(self) -> bool: ...

    def isEditable(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setBigEndian(self, __a0: bool) -> None: ...

    def setByte(self, __a0: long, __a1: int) -> None: ...

    def setInt(self, __a0: long, __a1: int) -> None: ...

    def setLong(self, __a0: long, __a1: long) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def bigEndian(self) -> bool: ...

    @bigEndian.setter
    def bigEndian(self, value: bool) -> None: ...

    @property
    def editable(self) -> bool: ...

    @property
    def indexName(self) -> unicode: ...

    @property
    def length(self) -> long: ...

    @property
    def maxLocationRepresentationSize(self) -> int: ...
