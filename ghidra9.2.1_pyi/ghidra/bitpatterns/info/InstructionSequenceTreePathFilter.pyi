from typing import List
import ghidra.bitpatterns.info
import java.lang


class InstructionSequenceTreePathFilter(object):




    @overload
    def __init__(self, __a0: javax.swing.tree.TreePath, __a1: ghidra.bitpatterns.info.PatternType): ...

    @overload
    def __init__(self, __a0: List[object], __a1: List[object], __a2: ghidra.bitpatterns.info.PatternType): ...



    def allows(self, __a0: ghidra.bitpatterns.info.InstructionSequence) -> bool: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getInstructionType(self) -> ghidra.bitpatterns.info.PatternType: ...

    def getInstructions(self) -> List[object]: ...

    def getLengths(self) -> List[object]: ...

    def getTotalLength(self) -> int: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def instructionType(self) -> ghidra.bitpatterns.info.PatternType: ...

    @property
    def instructions(self) -> List[object]: ...

    @property
    def lengths(self) -> List[object]: ...

    @property
    def totalLength(self) -> int: ...
