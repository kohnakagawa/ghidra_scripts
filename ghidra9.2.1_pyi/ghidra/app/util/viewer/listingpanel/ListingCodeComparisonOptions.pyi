import ghidra.framework.options
import java.awt
import java.lang


class ListingCodeComparisonOptions(object):
    HELP_TOPIC: unicode = u'Listing Code Comparison'
    MEDIUM_GRAY_COLOR: java.awt.Color = java.awt.Color[r=185,g=185,b=185]
    MEDIUM_SKY_BLUE_COLOR: java.awt.Color = java.awt.Color[r=105,g=205,b=225]
    OPTIONS_CATEGORY_NAME: unicode = u'Listing Code Comparison'
    SPRING_GREEN_COLOR: java.awt.Color = java.awt.Color[r=175,g=255,b=105]



    def __init__(self): ...



    def equals(self, __a0: object) -> bool: ...

    def getByteDiffsBackgroundColor(self) -> java.awt.Color: ...

    def getClass(self) -> java.lang.Class: ...

    def getDefaultByteDiffsBackgroundColor(self) -> java.awt.Color: ...

    def getDefaultDiffCodeUnitsBackgroundColor(self) -> java.awt.Color: ...

    def getDefaultMnemonicDiffsBackgroundColor(self) -> java.awt.Color: ...

    def getDefaultOperandDiffsBackgroundColor(self) -> java.awt.Color: ...

    def getDefaultUnmatchedCodeUnitsBackgroundColor(self) -> java.awt.Color: ...

    def getDiffCodeUnitsBackgroundColor(self) -> java.awt.Color: ...

    def getMnemonicDiffsBackgroundColor(self) -> java.awt.Color: ...

    def getOperandDiffsBackgroundColor(self) -> java.awt.Color: ...

    def getUnmatchedCodeUnitsBackgroundColor(self) -> java.awt.Color: ...

    def hashCode(self) -> int: ...

    def initializeOptions(self, options: ghidra.framework.options.ToolOptions) -> None: ...

    def loadOptions(self, options: ghidra.framework.options.ToolOptions) -> None: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def byteDiffsBackgroundColor(self) -> java.awt.Color: ...

    @property
    def defaultByteDiffsBackgroundColor(self) -> java.awt.Color: ...

    @property
    def defaultDiffCodeUnitsBackgroundColor(self) -> java.awt.Color: ...

    @property
    def defaultMnemonicDiffsBackgroundColor(self) -> java.awt.Color: ...

    @property
    def defaultOperandDiffsBackgroundColor(self) -> java.awt.Color: ...

    @property
    def defaultUnmatchedCodeUnitsBackgroundColor(self) -> java.awt.Color: ...

    @property
    def diffCodeUnitsBackgroundColor(self) -> java.awt.Color: ...

    @property
    def mnemonicDiffsBackgroundColor(self) -> java.awt.Color: ...

    @property
    def operandDiffsBackgroundColor(self) -> java.awt.Color: ...

    @property
    def unmatchedCodeUnitsBackgroundColor(self) -> java.awt.Color: ...
