from typing import List
import docking.widgets.table
import ghidra.app.plugin.core.osgi
import ghidra.docking.settings
import java.lang
import java.util
import javax.swing.event
import javax.swing.table


class BundleStatusTableModel(docking.widgets.table.GDynamicColumnTableModel):








    def addListener(self, __a0: ghidra.app.plugin.core.osgi.BundleStatusChangeRequestListener) -> None: ...

    def addSortListener(self, __a0: docking.widgets.table.SortListener) -> None: ...

    def addTableModelListener(self, __a0: javax.swing.event.TableModelListener) -> None: ...

    def dispose(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def findColumn(self, __a0: unicode) -> int: ...

    def fireTableCellUpdated(self, __a0: int, __a1: int) -> None: ...

    def fireTableChanged(self, __a0: javax.swing.event.TableModelEvent) -> None: ...

    def fireTableDataChanged(self) -> None: ...

    def fireTableRowsDeleted(self, __a0: int, __a1: int) -> None: ...

    def fireTableRowsInserted(self, __a0: int, __a1: int) -> None: ...

    def fireTableRowsUpdated(self, __a0: int, __a1: int) -> None: ...

    def fireTableStructureChanged(self) -> None: ...

    @staticmethod
    def from(__a0: javax.swing.table.TableModel) -> docking.widgets.table.VariableColumnTableModel: ...

    def getClass(self) -> java.lang.Class: ...

    def getColumn(self, __a0: int) -> docking.widgets.table.DynamicTableColumn: ...

    def getColumnClass(self, __a0: int) -> java.lang.Class: ...

    def getColumnCount(self) -> int: ...

    def getColumnDescription(self, __a0: int) -> unicode: ...

    def getColumnDisplayName(self, __a0: int) -> unicode: ...

    @overload
    def getColumnIndex(self, __a0: docking.widgets.table.DynamicTableColumn) -> int: ...

    @overload
    def getColumnIndex(self, __a0: java.lang.Class) -> int: ...

    def getColumnName(self, __a0: int) -> unicode: ...

    def getColumnSettings(self, __a0: int) -> ghidra.docking.settings.Settings: ...

    def getColumnSettingsDefinitions(self, __a0: int) -> List[ghidra.docking.settings.SettingsDefinition]: ...

    def getColumnValueForRow(self, __a0: object, __a1: int) -> object: ...

    def getDataSource(self) -> object: ...

    def getDefaultColumnCount(self) -> int: ...

    def getLastSelectedObjects(self) -> List[object]: ...

    def getListeners(self, __a0: java.lang.Class) -> List[java.util.EventListener]: ...

    def getMaxLines(self, __a0: int) -> int: ...

    def getModelData(self) -> List[object]: ...

    def getName(self) -> unicode: ...

    def getPendingSortState(self) -> docking.widgets.table.TableSortState: ...

    def getPreferredColumnWidth(self, __a0: int) -> int: ...

    def getPrimarySortColumnIndex(self) -> int: ...

    def getRenderer(self, __a0: int) -> javax.swing.table.TableCellRenderer: ...

    def getRowCount(self) -> int: ...

    def getRowIndex(self, __a0: object) -> int: ...

    def getRowObject(self, __a0: int) -> object: ...

    def getRowObjects(self, __a0: List[int]) -> List[object]: ...

    def getTableModelListeners(self) -> List[javax.swing.event.TableModelListener]: ...

    def getTableSortState(self) -> docking.widgets.table.TableSortState: ...

    def getUniqueIdentifier(self, __a0: int) -> unicode: ...

    def getValueAt(self, __a0: int, __a1: int) -> object: ...

    def hashCode(self) -> int: ...

    def isCellEditable(self, __a0: int, __a1: int) -> bool: ...

    def isDefaultColumn(self, __a0: int) -> bool: ...

    def isSortPending(self) -> bool: ...

    def isSortable(self, __a0: int) -> bool: ...

    def isSorted(self) -> bool: ...

    def isVisibleByDefault(self, __a0: int) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def refresh(self) -> None: ...

    def removeListener(self, __a0: ghidra.app.plugin.core.osgi.BundleStatusChangeRequestListener) -> None: ...

    def removeTableModelListener(self, __a0: javax.swing.event.TableModelListener) -> None: ...

    def setAllColumnSettings(self, __a0: List[ghidra.docking.settings.Settings]) -> None: ...

    def setLastSelectedObjects(self, __a0: List[object]) -> None: ...

    def setTableSortState(self, __a0: docking.widgets.table.TableSortState) -> None: ...

    def setValueAt(self, __a0: object, __a1: int, __a2: int) -> None: ...

    def stateChanged(self, __a0: javax.swing.event.ChangeEvent) -> None: ...

    def toString(self) -> unicode: ...

    @staticmethod
    def unwrap(__a0: javax.swing.table.TableModel) -> javax.swing.table.TableModel: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def dataSource(self) -> List[object]: ...

    @property
    def modelData(self) -> List[object]: ...

    @property
    def name(self) -> unicode: ...
