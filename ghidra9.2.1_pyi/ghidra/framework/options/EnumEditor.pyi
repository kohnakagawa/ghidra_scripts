from typing import List
import java.awt
import java.beans
import java.lang


class EnumEditor(java.beans.PropertyEditorSupport):




    def __init__(self): ...



    def addPropertyChangeListener(self, __a0: java.beans.PropertyChangeListener) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def firePropertyChange(self) -> None: ...

    def getAsText(self) -> unicode:
        """
        @see java.beans.PropertyEditor#getAsText()
        """
        ...

    def getClass(self) -> java.lang.Class: ...

    def getCustomEditor(self) -> java.awt.Component: ...

    def getEnums(self) -> java.lang.Enum: ...

    def getJavaInitializationString(self) -> unicode: ...

    def getSource(self) -> object: ...

    def getTags(self) -> List[unicode]:
        """
        @see java.beans.PropertyEditor#getTags()
        """
        ...

    def getValue(self) -> object:
        """
        @see java.beans.PropertyEditor#getValue()
        """
        ...

    def hashCode(self) -> int: ...

    def isPaintable(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def paintValue(self, __a0: java.awt.Graphics, __a1: java.awt.Rectangle) -> None: ...

    def removePropertyChangeListener(self, __a0: java.beans.PropertyChangeListener) -> None: ...

    def setAsText(self, s: unicode) -> None:
        """
        @see java.beans.PropertyEditor#setAsText(java.lang.String)
        """
        ...

    def setSource(self, __a0: object) -> None: ...

    def setValue(self, o: object) -> None:
        """
        @see java.beans.PropertyEditor#setValue(java.lang.Object)
        """
        ...

    def supportsCustomEditor(self) -> bool: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def asText(self) -> unicode: ...

    @asText.setter
    def asText(self, value: unicode) -> None: ...

    @property
    def enums(self) -> List[java.lang.Enum]: ...

    @property
    def tags(self) -> List[unicode]: ...

    @property
    def value(self) -> object: ...

    @value.setter
    def value(self, value: object) -> None: ...
