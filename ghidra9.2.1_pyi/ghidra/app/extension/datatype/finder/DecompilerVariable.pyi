from typing import List
import ghidra.app.decompiler
import ghidra.program.model.address
import ghidra.program.model.data
import ghidra.program.model.listing
import java.lang


class DecompilerVariable(object):








    def equals(self, __a0: object) -> bool: ...

    def getAddress(self) -> ghidra.program.model.address.Address: ...

    def getCasts(self) -> List[object]: ...

    def getClass(self) -> java.lang.Class: ...

    def getDataType(self) -> ghidra.program.model.data.DataType: ...

    def getFunction(self) -> ghidra.program.model.listing.Function: ...

    def getName(self) -> unicode: ...

    def getParent(self) -> ghidra.app.decompiler.ClangNode: ...

    def getParentDataType(self) -> ghidra.program.model.data.DataType: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def address(self) -> ghidra.program.model.address.Address: ...

    @property
    def casts(self) -> List[object]: ...

    @property
    def dataType(self) -> ghidra.program.model.data.DataType: ...

    @property
    def function(self) -> ghidra.program.model.listing.Function: ...

    @property
    def name(self) -> unicode: ...

    @property
    def parent(self) -> ghidra.app.decompiler.ClangNode: ...

    @property
    def parentDataType(self) -> ghidra.program.model.data.DataType: ...
