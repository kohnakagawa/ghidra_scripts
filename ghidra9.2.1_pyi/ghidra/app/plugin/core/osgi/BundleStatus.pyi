import generic.jar
import ghidra.app.plugin.core.osgi
import java.lang


class BundleStatus(object, java.lang.Comparable):








    @overload
    def compareTo(self, __a0: ghidra.app.plugin.core.osgi.BundleStatus) -> int: ...

    @overload
    def compareTo(self, __a0: object) -> int: ...

    def equals(self, __a0: object) -> bool: ...

    def fileExists(self) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getFile(self) -> generic.jar.ResourceFile: ...

    def getLocationIdentifier(self) -> unicode: ...

    def getPathAsString(self) -> unicode: ...

    def getSummary(self) -> unicode: ...

    def getType(self) -> ghidra.app.plugin.core.osgi.GhidraBundle.Type: ...

    def hashCode(self) -> int: ...

    def isActive(self) -> bool: ...

    def isEnabled(self) -> bool: ...

    def isReadOnly(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setActive(self, __a0: bool) -> None: ...

    def setEnabled(self, __a0: bool) -> None: ...

    def setSummary(self, __a0: unicode) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def active(self) -> bool: ...

    @active.setter
    def active(self, value: bool) -> None: ...

    @property
    def enabled(self) -> bool: ...

    @enabled.setter
    def enabled(self, value: bool) -> None: ...

    @property
    def file(self) -> generic.jar.ResourceFile: ...

    @property
    def locationIdentifier(self) -> unicode: ...

    @property
    def pathAsString(self) -> unicode: ...

    @property
    def readOnly(self) -> bool: ...

    @property
    def summary(self) -> unicode: ...

    @summary.setter
    def summary(self, value: unicode) -> None: ...

    @property
    def type(self) -> ghidra.app.plugin.core.osgi.GhidraBundle.Type: ...
