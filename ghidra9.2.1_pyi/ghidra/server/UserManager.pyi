from typing import List
import java.io
import java.lang
import javax.security.auth.x500


class UserManager(object):
    ANONYMOUS_USERNAME: unicode = u'-anonymous-'
    DN_LOG_FILE: unicode = u'UnknownDN.log'
    USER_PASSWORD_FILE: unicode = u'users'
    X500_NAME_FORMAT: unicode = u'RFC2253'







    @overload
    def addUser(self, __a0: unicode) -> None: ...

    @overload
    def addUser(self, __a0: unicode, __a1: javax.security.auth.x500.X500Principal) -> None: ...

    def authenticateUser(self, __a0: unicode, __a1: List[int]) -> None: ...

    def canSetPassword(self, __a0: unicode) -> bool: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getDistinguishedName(self, __a0: unicode) -> javax.security.auth.x500.X500Principal: ...

    def getPasswordExpiration(self, __a0: unicode) -> long: ...

    def getSSHPubKeyFile(self, __a0: unicode) -> java.io.File: ...

    def getUserByDistinguishedName(self, __a0: javax.security.auth.x500.X500Principal) -> unicode: ...

    def getUsers(self) -> List[unicode]: ...

    def hashCode(self) -> int: ...

    def isValidUser(self, __a0: unicode) -> bool: ...

    @staticmethod
    def isValidUserName(__a0: unicode) -> bool: ...

    def logUnknownDN(self, __a0: unicode, __a1: javax.security.auth.x500.X500Principal) -> None: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def removeUser(self, __a0: unicode) -> None: ...

    def resetPassword(self, __a0: unicode, __a1: List[int]) -> bool: ...

    def setDistinguishedName(self, __a0: unicode, __a1: javax.security.auth.x500.X500Principal) -> bool: ...

    def setPassword(self, __a0: unicode, __a1: List[int], __a2: bool) -> bool: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def users(self) -> List[unicode]: ...
