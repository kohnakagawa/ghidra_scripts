import ghidra.program.model.address
import ghidra.program.model.listing
import java.lang


class BookmarkNavigator(object):




    def __init__(self, __a0: ghidra.app.services.MarkerService, __a1: ghidra.program.model.listing.BookmarkManager, __a2: ghidra.program.model.listing.BookmarkType): ...



    def add(self, __a0: ghidra.program.model.address.Address) -> None: ...

    def clear(self, __a0: ghidra.program.model.address.Address) -> None: ...

    @staticmethod
    def defineBookmarkTypes(__a0: ghidra.program.model.listing.Program) -> None: ...

    def dispose(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def hashCode(self) -> int: ...

    def intersects(self, __a0: ghidra.program.model.address.Address, __a1: ghidra.program.model.address.Address) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    def updateBookmarkers(self, __a0: ghidra.program.model.address.AddressSet) -> None: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...
