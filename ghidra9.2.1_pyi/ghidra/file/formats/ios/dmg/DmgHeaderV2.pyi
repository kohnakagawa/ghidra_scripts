from typing import List
import ghidra.file.formats.ios.dmg
import ghidra.program.model.data
import java.lang


class DmgHeaderV2(ghidra.file.formats.ios.dmg.DmgHeader):




    def __init__(self, __a0: ghidra.app.util.bin.BinaryReader): ...



    def equals(self, __a0: object) -> bool: ...

    def getBlockSize(self) -> int: ...

    def getClass(self) -> java.lang.Class: ...

    def getDataOffset(self) -> long: ...

    def getDataSize(self) -> long: ...

    def getIvSize(self) -> int: ...

    def getSignature(self) -> List[int]: ...

    def getUUID(self) -> List[int]: ...

    def getUnknown0(self) -> int: ...

    def getUnknown1(self) -> int: ...

    def getUnknown2(self) -> int: ...

    def getUnknown3(self) -> int: ...

    def getUnknown4(self) -> int: ...

    def getVersion(self) -> int: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toDataType(self) -> ghidra.program.model.data.DataType: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def UUID(self) -> List[int]: ...

    @property
    def blockSize(self) -> int: ...

    @property
    def dataOffset(self) -> long: ...

    @property
    def dataSize(self) -> long: ...

    @property
    def ivSize(self) -> int: ...

    @property
    def signature(self) -> List[int]: ...

    @property
    def unknown0(self) -> int: ...

    @property
    def unknown1(self) -> int: ...

    @property
    def unknown2(self) -> int: ...

    @property
    def unknown3(self) -> int: ...

    @property
    def unknown4(self) -> int: ...

    @property
    def version(self) -> int: ...
