import java.awt
import java.lang
import javax.accessibility
import javax.swing
import javax.swing.plaf
import javax.swing.plaf.basic


class FVSliderUI(javax.swing.plaf.basic.BasicSliderUI):
    """
    Custom UI for a slider that dynamically adjusts the thumb height based on the size of the
     given JScrollPane and {JTable}.

     Note: This is used instead of a {link BasicScrollBarUI} instance because of the complexity
     of trying to adjust the thumb size of a JScrollBar that is not attached to a
     JScrollPane instance.
    """





    def __init__(self, slider: javax.swing.JSlider, scrollPane: javax.swing.JScrollPane, table: javax.swing.JTable, reader: ghidra.framework.main.logviewer.model.ChunkReader, model: ghidra.framework.main.logviewer.model.ChunkModel):
        """
        Constructor.
        @param slider
        @param scrollPane
        @param table
        @param reader
        @param model
        """
        ...



    def contains(self, __a0: javax.swing.JComponent, __a1: int, __a2: int) -> bool: ...

    @staticmethod
    def createUI(__a0: javax.swing.JComponent) -> javax.swing.plaf.ComponentUI: ...

    def equals(self, __a0: object) -> bool: ...

    def getAccessibleChild(self, __a0: javax.swing.JComponent, __a1: int) -> javax.accessibility.Accessible: ...

    def getAccessibleChildrenCount(self, __a0: javax.swing.JComponent) -> int: ...

    def getBaseline(self, __a0: javax.swing.JComponent, __a1: int, __a2: int) -> int: ...

    def getBaselineResizeBehavior(self, __a0: javax.swing.JComponent) -> java.awt.Component.BaselineResizeBehavior: ...

    def getClass(self) -> java.lang.Class: ...

    def getMaximumSize(self, __a0: javax.swing.JComponent) -> java.awt.Dimension: ...

    def getMinimumHorizontalSize(self) -> java.awt.Dimension: ...

    def getMinimumSize(self, __a0: javax.swing.JComponent) -> java.awt.Dimension: ...

    def getMinimumVerticalSize(self) -> java.awt.Dimension: ...

    def getPreferredHorizontalSize(self) -> java.awt.Dimension: ...

    def getPreferredSize(self, __a0: javax.swing.JComponent) -> java.awt.Dimension: ...

    def getPreferredVerticalSize(self) -> java.awt.Dimension: ...

    def hashCode(self) -> int: ...

    def installUI(self, __a0: javax.swing.JComponent) -> None: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def paint(self, __a0: java.awt.Graphics, __a1: javax.swing.JComponent) -> None: ...

    def paintFocus(self, __a0: java.awt.Graphics) -> None: ...

    def paintLabels(self, __a0: java.awt.Graphics) -> None: ...

    def paintThumb(self, __a0: java.awt.Graphics) -> None: ...

    def paintTicks(self, __a0: java.awt.Graphics) -> None: ...

    def paintTrack(self, __a0: java.awt.Graphics) -> None: ...

    def scrollByBlock(self, __a0: int) -> None: ...

    def scrollByUnit(self, __a0: int) -> None: ...

    def setThumbLocation(self, __a0: int, __a1: int) -> None: ...

    def toString(self) -> unicode: ...

    def uninstallUI(self, __a0: javax.swing.JComponent) -> None: ...

    def update(self, __a0: java.awt.Graphics, __a1: javax.swing.JComponent) -> None: ...

    def valueForXPosition(self, __a0: int) -> int: ...

    def valueForYPosition(self, __a0: int) -> int: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...
