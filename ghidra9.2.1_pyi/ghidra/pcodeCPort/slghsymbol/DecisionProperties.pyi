import generic.stl
import ghidra.pcodeCPort.slghpattern
import ghidra.pcodeCPort.slghsymbol
import java.lang


class DecisionProperties(object):




    def __init__(self): ...



    def conflictingPattern(self, __a0: ghidra.pcodeCPort.slghpattern.DisjointPattern, __a1: ghidra.pcodeCPort.slghsymbol.Constructor, __a2: ghidra.pcodeCPort.slghpattern.DisjointPattern, __a3: ghidra.pcodeCPort.slghsymbol.Constructor) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getConflictErrors(self) -> generic.stl.VectorSTL: ...

    def getIdentErrors(self) -> generic.stl.VectorSTL: ...

    def hashCode(self) -> int: ...

    def identicalPattern(self, __a0: ghidra.pcodeCPort.slghsymbol.Constructor, __a1: ghidra.pcodeCPort.slghsymbol.Constructor) -> None: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def conflictErrors(self) -> generic.stl.VectorSTL: ...

    @property
    def identErrors(self) -> generic.stl.VectorSTL: ...
