import ghidra.app.plugin.core.searchmem
import java.lang
import javax.swing


class BinarySearchFormat(ghidra.app.plugin.core.searchmem.SearchFormat):




    def __init__(self, __a0: javax.swing.event.ChangeListener): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getName(self) -> unicode: ...

    def getOptionsPanel(self) -> javax.swing.JPanel: ...

    def getSearchData(self, __a0: unicode) -> ghidra.app.plugin.core.searchmem.SearchData: ...

    def getToolTip(self) -> unicode: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setEndieness(self, __a0: bool) -> None: ...

    def supportsBackwardsSearch(self) -> bool: ...

    def toString(self) -> unicode: ...

    def usesEndieness(self) -> bool: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def toolTip(self) -> unicode: ...
