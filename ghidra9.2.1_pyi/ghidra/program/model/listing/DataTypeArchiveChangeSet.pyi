from typing import List
import ghidra.program.model.listing
import java.lang


class DataTypeArchiveChangeSet(ghidra.program.model.listing.DomainObjectChangeSet, ghidra.program.model.listing.DataTypeChangeSet, object):
    """
    Interface for a data type archive change set.  Objects that implements this interface track
     various change information on a data type archive.
    """









    def categoryAdded(self, __a0: long) -> None: ...

    def categoryChanged(self, __a0: long) -> None: ...

    def dataTypeAdded(self, __a0: long) -> None: ...

    def dataTypeChanged(self, __a0: long) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getCategoryAdditions(self) -> List[long]: ...

    def getCategoryChanges(self) -> List[long]: ...

    def getClass(self) -> java.lang.Class: ...

    def getDataTypeAdditions(self) -> List[long]: ...

    def getDataTypeChanges(self) -> List[long]: ...

    def getSourceArchiveAdditions(self) -> List[long]: ...

    def getSourceArchiveChanges(self) -> List[long]: ...

    def hasChanges(self) -> bool: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def sourceArchiveAdded(self, __a0: long) -> None: ...

    def sourceArchiveChanged(self, __a0: long) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def categoryAdditions(self) -> List[long]: ...

    @property
    def categoryChanges(self) -> List[long]: ...

    @property
    def dataTypeAdditions(self) -> List[long]: ...

    @property
    def dataTypeChanges(self) -> List[long]: ...

    @property
    def sourceArchiveAdditions(self) -> List[long]: ...

    @property
    def sourceArchiveChanges(self) -> List[long]: ...
