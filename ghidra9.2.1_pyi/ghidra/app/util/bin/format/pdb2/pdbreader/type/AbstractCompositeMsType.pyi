import ghidra.app.util.bin.format.pdb2.pdbreader
import ghidra.app.util.bin.format.pdb2.pdbreader.type
import java.lang


class AbstractCompositeMsType(ghidra.app.util.bin.format.pdb2.pdbreader.type.AbstractComplexMsType):




    @overload
    def __init__(self, __a0: ghidra.app.util.bin.format.pdb2.pdbreader.AbstractPdb, __a1: ghidra.app.util.bin.format.pdb2.pdbreader.PdbByteReader): ...

    @overload
    def __init__(self, __a0: ghidra.app.util.bin.format.pdb2.pdbreader.AbstractPdb, __a1: int, __a2: ghidra.app.util.bin.format.pdb2.pdbreader.RecordNumber, __a3: ghidra.app.util.bin.format.pdb2.pdbreader.type.MsProperty, __a4: long, __a5: ghidra.app.util.bin.format.pdb2.pdbreader.RecordNumber, __a6: ghidra.app.util.bin.format.pdb2.pdbreader.RecordNumber, __a7: unicode, __a8: unicode): ...



    @overload
    def emit(self, __a0: java.lang.StringBuilder) -> None: ...

    @overload
    def emit(self, __a0: java.lang.StringBuilder, __a1: ghidra.app.util.bin.format.pdb2.pdbreader.type.AbstractMsType.Bind) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getDerivedFromListRecordNumber(self) -> ghidra.app.util.bin.format.pdb2.pdbreader.RecordNumber: ...

    def getFieldDescriptorListRecordNumber(self) -> ghidra.app.util.bin.format.pdb2.pdbreader.RecordNumber: ...

    def getFieldDescriptorListType(self) -> ghidra.app.util.bin.format.pdb2.pdbreader.type.AbstractMsType: ...

    def getLength(self) -> long: ...

    def getMangledName(self) -> unicode: ...

    def getMsProperty(self) -> ghidra.app.util.bin.format.pdb2.pdbreader.type.MsProperty: ...

    def getName(self) -> unicode: ...

    def getNumElements(self) -> int: ...

    def getPdbId(self) -> int: ...

    def getRecordNumber(self) -> ghidra.app.util.bin.format.pdb2.pdbreader.RecordNumber: ...

    def getSize(self) -> long: ...

    def getTypeName(self) -> unicode: ...

    def getVShapeTableRecordNumber(self) -> ghidra.app.util.bin.format.pdb2.pdbreader.RecordNumber: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setRecordNumber(self, __a0: ghidra.app.util.bin.format.pdb2.pdbreader.RecordNumber) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def VShapeTableRecordNumber(self) -> ghidra.app.util.bin.format.pdb2.pdbreader.RecordNumber: ...

    @property
    def derivedFromListRecordNumber(self) -> ghidra.app.util.bin.format.pdb2.pdbreader.RecordNumber: ...

    @property
    def mangledName(self) -> unicode: ...

    @property
    def size(self) -> long: ...
