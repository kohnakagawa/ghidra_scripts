import ghidra.app.plugin.processors.sleigh
import java.lang


class ConstructState(object):




    def __init__(self, parent: ghidra.app.plugin.processors.sleigh.ConstructState): ...



    def addSubState(self, opState: ghidra.app.plugin.processors.sleigh.ConstructState) -> None: ...

    def dumpConstructorTree(self) -> unicode:
        """
        Used for testing and diagnostics: list the constructor line numbers used to resolve this
         encoding

         This includes braces to describe the tree structure
        @see AssemblyResolvedConstructor#dumpConstructorTree()
        @return the constructor tree
        """
        ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getConstructor(self) -> ghidra.app.plugin.processors.sleigh.Constructor: ...

    def getLength(self) -> int: ...

    def getOffset(self) -> int: ...

    def getParent(self) -> ghidra.app.plugin.processors.sleigh.ConstructState: ...

    def getSubState(self, index: int) -> ghidra.app.plugin.processors.sleigh.ConstructState: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def constructor(self) -> ghidra.app.plugin.processors.sleigh.Constructor: ...

    @property
    def length(self) -> int: ...

    @property
    def offset(self) -> int: ...

    @property
    def parent(self) -> ghidra.app.plugin.processors.sleigh.ConstructState: ...
