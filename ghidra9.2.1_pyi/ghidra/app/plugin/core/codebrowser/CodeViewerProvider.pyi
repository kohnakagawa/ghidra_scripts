from typing import List
import docking
import docking.action
import docking.actions
import docking.dnd
import docking.widgets
import ghidra.app.nav
import ghidra.app.services
import ghidra.app.util
import ghidra.app.util.viewer.listingpanel
import ghidra.framework.options
import ghidra.framework.plugintool
import ghidra.program.model.address
import ghidra.program.model.listing
import ghidra.program.util
import ghidra.util
import java.awt
import java.awt.datatransfer
import java.awt.dnd
import java.awt.event
import java.lang
import javax.swing
import javax.swing.event


class CodeViewerProvider(ghidra.framework.plugintool.NavigatableComponentProviderAdapter, ghidra.app.util.viewer.listingpanel.ProgramLocationListener, ghidra.app.util.viewer.listingpanel.ProgramSelectionListener, docking.dnd.Draggable, docking.dnd.Droppable, javax.swing.event.ChangeListener, ghidra.app.util.viewer.listingpanel.StringSelectionListener, docking.actions.PopupActionProvider):




    def __init__(self, __a0: ghidra.app.plugin.core.codebrowser.CodeBrowserPluginInterface, __a1: ghidra.app.util.viewer.format.FormatManager, __a2: bool): ...



    def add(self, __a0: object, __a1: java.awt.dnd.DropTargetDropEvent, __a2: java.awt.datatransfer.DataFlavor) -> None: ...

    def addListingDisplayListener(self, __a0: ghidra.app.util.viewer.listingpanel.ListingDisplayListener) -> None: ...

    def addLocalAction(self, __a0: docking.action.DockingActionIf) -> None: ...

    def addNavigatableListener(self, __a0: ghidra.app.nav.NavigatableRemovalListener) -> None: ...

    def addToTool(self) -> None: ...

    def clearPanel(self) -> None: ...

    def cloneWindow(self) -> None: ...

    def closeComponent(self) -> None: ...

    def componentActivated(self) -> None: ...

    def componentDeactived(self) -> None: ...

    def componentHidden(self) -> None: ...

    def componentShown(self) -> None: ...

    def contextChanged(self) -> None: ...

    def dispose(self) -> None: ...

    def dragCanceled(self, __a0: java.awt.dnd.DragSourceDropEvent) -> None: ...

    def dragUnderFeedback(self, __a0: bool, __a1: java.awt.dnd.DropTargetDragEvent) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getActionContext(self, __a0: java.awt.event.MouseEvent) -> docking.ActionContext: ...

    def getClass(self) -> java.lang.Class: ...

    def getComponent(self) -> javax.swing.JComponent: ...

    def getContextType(self) -> java.lang.Class: ...

    def getDefaultWindowPosition(self) -> docking.WindowPosition: ...

    def getDragAction(self) -> int: ...

    def getDragSourceListener(self) -> java.awt.dnd.DragSourceListener: ...

    def getHelpInfo(self) -> unicode: ...

    def getHelpLocation(self) -> ghidra.util.HelpLocation: ...

    def getHelpObject(self) -> object: ...

    def getHighlight(self) -> ghidra.program.util.ProgramSelection: ...

    def getIcon(self) -> javax.swing.Icon: ...

    def getInstanceID(self) -> long: ...

    def getIntraGroupPosition(self) -> docking.WindowPosition: ...

    def getListingPanel(self) -> ghidra.app.util.viewer.listingpanel.ListingPanel: ...

    def getLocation(self) -> ghidra.program.util.ProgramLocation: ...

    @staticmethod
    def getMappedName(__a0: unicode, __a1: unicode) -> unicode: ...

    @staticmethod
    def getMappedOwner(__a0: unicode, __a1: unicode) -> unicode: ...

    def getMemento(self) -> ghidra.app.nav.LocationMemento: ...

    def getName(self) -> unicode: ...

    def getNavigatableIcon(self) -> javax.swing.Icon: ...

    def getOtherPanel(self) -> ghidra.app.util.viewer.listingpanel.ListingPanel: ...

    def getOwner(self) -> unicode: ...

    def getPopupActions(self, __a0: docking.Tool, __a1: docking.ActionContext) -> List[object]: ...

    def getProgram(self) -> ghidra.program.model.listing.Program: ...

    def getSelection(self) -> ghidra.program.util.ProgramSelection: ...

    def getStringSelection(self) -> unicode: ...

    def getSubTitle(self) -> unicode: ...

    def getTabText(self) -> unicode: ...

    def getTitle(self) -> unicode: ...

    def getTool(self) -> docking.Tool: ...

    def getTransferable(self, __a0: java.awt.Point) -> java.awt.datatransfer.Transferable: ...

    def getWindowGroup(self) -> unicode: ...

    def getWindowSubMenuName(self) -> unicode: ...

    def goTo(self, __a0: ghidra.program.model.listing.Program, __a1: ghidra.program.util.ProgramLocation) -> bool: ...

    def hashCode(self) -> int: ...

    def isActive(self) -> bool: ...

    def isConnected(self) -> bool: ...

    def isDisposed(self) -> bool: ...

    def isDropOk(self, __a0: java.awt.dnd.DropTargetDragEvent) -> bool: ...

    def isDynamicListing(self) -> bool: ...

    def isFocusedProvider(self) -> bool: ...

    def isInTool(self) -> bool: ...

    def isSnapshot(self) -> bool: ...

    def isStartDragOk(self, __a0: java.awt.dnd.DragGestureEvent) -> bool: ...

    def isTransient(self) -> bool: ...

    def isVisible(self) -> bool: ...

    def move(self) -> None: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def programLocationChanged(self, __a0: ghidra.program.util.ProgramLocation, __a1: docking.widgets.EventTrigger) -> None: ...

    def programSelectionChanged(self, __a0: ghidra.program.util.ProgramSelection) -> None: ...

    def readDataState(self, __a0: ghidra.framework.options.SaveState) -> None: ...

    @staticmethod
    def registerProviderNameOwnerChange(__a0: unicode, __a1: unicode, __a2: unicode, __a3: unicode) -> None: ...

    def removeFromTool(self) -> None: ...

    def removeHighlightProvider(self, __a0: ghidra.app.util.HighlightProvider, __a1: ghidra.program.model.listing.Program) -> None: ...

    def removeListingDisplayListener(self, __a0: ghidra.app.util.viewer.listingpanel.ListingDisplayListener) -> None: ...

    def removeNavigatableListener(self, __a0: ghidra.app.nav.NavigatableRemovalListener) -> None: ...

    def requestFocus(self) -> None: ...

    def selectAll(self) -> None: ...

    def selectComplement(self) -> None: ...

    def setClipboardService(self, __a0: ghidra.app.services.ClipboardService) -> None: ...

    def setCoordinatedListingPanelListener(self, __a0: ghidra.app.services.CoordinatedListingPanelListener) -> None: ...

    def setHelpLocation(self, __a0: ghidra.util.HelpLocation) -> None: ...

    def setHighlight(self, __a0: ghidra.program.util.ProgramSelection) -> None: ...

    def setHighlightProvider(self, __a0: ghidra.app.util.HighlightProvider, __a1: ghidra.program.model.listing.Program) -> None: ...

    def setIntraGroupPosition(self, __a0: docking.WindowPosition) -> None: ...

    def setMemento(self, __a0: ghidra.app.nav.LocationMemento) -> None: ...

    def setNorthComponent(self, __a0: javax.swing.JComponent) -> None: ...

    def setPanel(self, __a0: ghidra.app.util.viewer.listingpanel.ListingPanel) -> None: ...

    def setSelection(self, __a0: ghidra.program.util.ProgramSelection) -> None: ...

    def setStringSelection(self, __a0: unicode) -> None: ...

    def setSubTitle(self, __a0: unicode) -> None: ...

    def setTabText(self, __a0: unicode) -> None: ...

    def setTitle(self, __a0: unicode) -> None: ...

    def setView(self, __a0: ghidra.program.model.address.AddressSetView) -> None: ...

    def setVisible(self, __a0: bool) -> None: ...

    def stateChanged(self, __a0: javax.swing.event.ChangeEvent) -> None: ...

    def supportsHighlight(self) -> bool: ...

    def supportsMarkers(self) -> bool: ...

    def toFront(self) -> None: ...

    def toString(self) -> unicode: ...

    def undoDragUnderFeedback(self) -> None: ...

    def updateHighlightProvider(self) -> None: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    def writeDataState(self, __a0: ghidra.framework.options.SaveState) -> None: ...

    @property
    def clipboardService(self) -> None: ...  # No getter available.

    @clipboardService.setter
    def clipboardService(self, value: ghidra.app.services.ClipboardService) -> None: ...

    @property
    def component(self) -> javax.swing.JComponent: ...

    @property
    def coordinatedListingPanelListener(self) -> None: ...  # No getter available.

    @coordinatedListingPanelListener.setter
    def coordinatedListingPanelListener(self, value: ghidra.app.services.CoordinatedListingPanelListener) -> None: ...

    @property
    def dragAction(self) -> int: ...

    @property
    def dragSourceListener(self) -> java.awt.dnd.DragSourceListener: ...

    @property
    def dynamicListing(self) -> bool: ...

    @property
    def highlight(self) -> ghidra.program.util.ProgramSelection: ...

    @highlight.setter
    def highlight(self, value: ghidra.program.util.ProgramSelection) -> None: ...

    @property
    def icon(self) -> javax.swing.Icon: ...

    @property
    def intraGroupPosition(self) -> docking.WindowPosition: ...

    @intraGroupPosition.setter
    def intraGroupPosition(self, value: docking.WindowPosition) -> None: ...

    @property
    def listingPanel(self) -> ghidra.app.util.viewer.listingpanel.ListingPanel: ...

    @property
    def location(self) -> ghidra.program.util.ProgramLocation: ...

    @property
    def memento(self) -> ghidra.app.nav.LocationMemento: ...

    @memento.setter
    def memento(self, value: ghidra.app.nav.LocationMemento) -> None: ...

    @property
    def navigatableIcon(self) -> javax.swing.Icon: ...

    @property
    def northComponent(self) -> None: ...  # No getter available.

    @northComponent.setter
    def northComponent(self, value: javax.swing.JComponent) -> None: ...

    @property
    def otherPanel(self) -> ghidra.app.util.viewer.listingpanel.ListingPanel: ...

    @property
    def panel(self) -> None: ...  # No getter available.

    @panel.setter
    def panel(self, value: ghidra.app.util.viewer.listingpanel.ListingPanel) -> None: ...

    @property
    def program(self) -> ghidra.program.model.listing.Program: ...

    @property
    def selection(self) -> ghidra.program.util.ProgramSelection: ...

    @selection.setter
    def selection(self, value: ghidra.program.util.ProgramSelection) -> None: ...

    @property
    def snapshot(self) -> bool: ...

    @property
    def stringSelection(self) -> unicode: ...

    @stringSelection.setter
    def stringSelection(self, value: unicode) -> None: ...

    @property
    def view(self) -> None: ...  # No getter available.

    @view.setter
    def view(self, value: ghidra.program.model.address.AddressSetView) -> None: ...

    @property
    def windowGroup(self) -> unicode: ...
