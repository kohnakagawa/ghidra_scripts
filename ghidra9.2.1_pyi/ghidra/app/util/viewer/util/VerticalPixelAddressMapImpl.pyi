import ghidra.app.util.viewer.listingpanel
import ghidra.program.model.address
import java.lang


class VerticalPixelAddressMapImpl(object, ghidra.app.util.viewer.listingpanel.VerticalPixelAddressMap):
    """
    Maps vertical pixel locations to layouts on the currently displayed screen.
    """





    def __init__(self, __a0: List[object], __a1: ghidra.app.util.viewer.util.AddressIndexMap): ...



    def equals(self, __a0: object) -> bool: ...

    def findLayoutAt(self, y: int) -> int: ...

    def getAddressSet(self) -> ghidra.program.model.address.AddressSetView: ...

    def getBeginPosition(self, i: int) -> int: ...

    def getClass(self) -> java.lang.Class: ...

    def getEndAddress(self) -> ghidra.program.model.address.Address: ...

    def getEndPosition(self, i: int) -> int: ...

    def getLayoutAddress(self, i: int) -> ghidra.program.model.address.Address: ...

    def getLayoutEndAddress(self, i: int) -> ghidra.program.model.address.Address: ...

    def getLayoutIndexSize(self, i: int) -> int: ...

    def getMarkPosition(self, i: int) -> int: ...

    def getNumLayouts(self) -> int: ...

    def getStartAddress(self) -> ghidra.program.model.address.Address: ...

    def hasPrimaryField(self, i: int) -> bool: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def addressSet(self) -> ghidra.program.model.address.AddressSetView: ...

    @property
    def endAddress(self) -> ghidra.program.model.address.Address: ...

    @property
    def numLayouts(self) -> int: ...

    @property
    def startAddress(self) -> ghidra.program.model.address.Address: ...
