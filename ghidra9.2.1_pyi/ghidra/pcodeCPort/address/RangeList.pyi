import generic.stl
import ghidra.pcodeCPort.address
import ghidra.pcodeCPort.space
import ghidra.pcodeCPort.translate
import java.io
import java.lang
import org.jdom


class RangeList(object):




    @overload
    def __init__(self): ...

    @overload
    def __init__(self, __a0: ghidra.pcodeCPort.address.RangeList): ...



    def begin(self) -> generic.stl.IteratorSTL: ...

    def clear(self) -> None: ...

    def empty(self) -> bool: ...

    def end(self) -> generic.stl.IteratorSTL: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    @overload
    def getFirstRange(self) -> ghidra.pcodeCPort.address.Range: ...

    @overload
    def getFirstRange(self, __a0: ghidra.pcodeCPort.space.AddrSpace) -> ghidra.pcodeCPort.address.Range: ...

    @overload
    def getLastRange(self) -> ghidra.pcodeCPort.address.Range: ...

    @overload
    def getLastRange(self, __a0: ghidra.pcodeCPort.space.AddrSpace) -> ghidra.pcodeCPort.address.Range: ...

    def hashCode(self) -> int: ...

    def inRange(self, __a0: ghidra.pcodeCPort.address.Address, __a1: int) -> bool: ...

    def insertRange(self, __a0: ghidra.pcodeCPort.space.AddrSpace, __a1: long, __a2: long) -> None: ...

    def longestFit(self, __a0: ghidra.pcodeCPort.address.Address, __a1: long) -> long: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def printBounds(self, __a0: java.io.PrintStream) -> None: ...

    def removeRange(self, __a0: ghidra.pcodeCPort.space.AddrSpace, __a1: long, __a2: long) -> None: ...

    def restoreXml(self, __a0: org.jdom.Element, __a1: ghidra.pcodeCPort.translate.Translate) -> None: ...

    def saveXml(self, __a0: java.io.PrintStream) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def firstRange(self) -> ghidra.pcodeCPort.address.Range: ...

    @property
    def lastRange(self) -> ghidra.pcodeCPort.address.Range: ...
