from typing import List
import generic.jar
import ghidra.app.plugin.core.osgi
import java.io
import java.lang
import java.nio.file
import java.util
import org.osgi.framework


class GhidraSourceBundle(ghidra.app.plugin.core.osgi.GhidraBundle):




    def __init__(self, __a0: ghidra.app.plugin.core.osgi.BundleHost, __a1: generic.jar.ResourceFile, __a2: bool, __a3: bool): ...



    @overload
    def build(self) -> bool: ...

    @overload
    def build(self, __a0: java.io.PrintWriter) -> bool: ...

    def classNameForScript(self, __a0: generic.jar.ResourceFile) -> unicode: ...

    def clean(self) -> bool: ...

    def equals(self, __a0: object) -> bool: ...

    def getAllCapabilities(self) -> List[object]: ...

    def getAllErrors(self) -> java.util.Map: ...

    def getAllRequirements(self) -> List[object]: ...

    @staticmethod
    def getBindirFromScriptFile(__a0: generic.jar.ResourceFile) -> java.nio.file.Path: ...

    def getClass(self) -> java.lang.Class: ...

    @staticmethod
    def getCompiledBundlesDir() -> java.nio.file.Path: ...

    def getErrors(self, __a0: generic.jar.ResourceFile) -> ghidra.app.plugin.core.osgi.BuildError: ...

    def getFile(self) -> generic.jar.ResourceFile: ...

    def getLocationIdentifier(self) -> unicode: ...

    def getNewSources(self) -> List[object]: ...

    def getOSGiBundle(self) -> org.osgi.framework.Bundle: ...

    @staticmethod
    def getType(__a0: java.io.File) -> ghidra.app.plugin.core.osgi.GhidraBundle.Type: ...

    def hashCode(self) -> int: ...

    def isActive(self) -> bool: ...

    def isEnabled(self) -> bool: ...

    def isSystemBundle(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    @staticmethod
    def sourceDirHash(__a0: generic.jar.ResourceFile) -> unicode: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def allCapabilities(self) -> List[object]: ...

    @property
    def allErrors(self) -> java.util.Map: ...

    @property
    def allRequirements(self) -> List[object]: ...

    @property
    def locationIdentifier(self) -> unicode: ...

    @property
    def newSources(self) -> List[object]: ...
