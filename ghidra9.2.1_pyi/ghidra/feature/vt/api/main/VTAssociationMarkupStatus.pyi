import ghidra.feature.vt.api.main
import java.lang


class VTAssociationMarkupStatus(object, java.lang.Comparable):




    @overload
    def __init__(self): ...

    @overload
    def __init__(self, __a0: int): ...

    @overload
    def __init__(self, __a0: bool, __a1: bool, __a2: bool, __a3: bool, __a4: bool, __a5: bool): ...



    @overload
    def compareTo(self, __a0: ghidra.feature.vt.api.main.VTAssociationMarkupStatus) -> int: ...

    @overload
    def compareTo(self, __a0: object) -> int: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getDescription(self) -> unicode: ...

    def getStatusValue(self) -> int: ...

    def hasAppliedMarkup(self) -> bool: ...

    def hasDontCareMarkup(self) -> bool: ...

    def hasDontKnowMarkup(self) -> bool: ...

    def hasErrors(self) -> bool: ...

    def hasRejectedMarkup(self) -> bool: ...

    def hasUnexaminedMarkup(self) -> bool: ...

    def hashCode(self) -> int: ...

    def isFullyApplied(self) -> bool: ...

    def isInitialized(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def description(self) -> unicode: ...

    @property
    def fullyApplied(self) -> bool: ...

    @property
    def initialized(self) -> bool: ...

    @property
    def statusValue(self) -> int: ...
