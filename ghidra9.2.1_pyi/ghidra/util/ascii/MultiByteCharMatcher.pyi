import ghidra.util.ascii
import java.lang


class MultiByteCharMatcher(object, ghidra.util.ascii.ByteStreamCharMatcher):




    def __init__(self, minLength: int, charSet: ghidra.util.ascii.CharSetRecognizer, charWidth: ghidra.util.ascii.CharWidth, endian: ghidra.program.model.lang.Endian, alignment: int, offset: int): ...



    def add(self, b: int) -> bool: ...

    def endSequence(self) -> bool: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getSequence(self) -> ghidra.util.ascii.Sequence: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def reset(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def sequence(self) -> ghidra.util.ascii.Sequence: ...
