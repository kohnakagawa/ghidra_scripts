import generic.stl
import ghidra.pcodeCPort.context
import ghidra.pcodeCPort.semantics
import ghidra.pcodeCPort.translate
import java.io
import java.lang
import org.jdom


class HandleTpl(object):




    @overload
    def __init__(self): ...

    @overload
    def __init__(self, __a0: ghidra.pcodeCPort.semantics.VarnodeTpl): ...

    @overload
    def __init__(self, __a0: ghidra.pcodeCPort.semantics.ConstTpl, __a1: ghidra.pcodeCPort.semantics.ConstTpl, __a2: ghidra.pcodeCPort.semantics.VarnodeTpl, __a3: ghidra.pcodeCPort.space.AddrSpace, __a4: long): ...



    def changeHandleIndex(self, __a0: generic.stl.VectorSTL) -> None: ...

    def dispose(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def fix(self, __a0: ghidra.pcodeCPort.context.FixedHandle, __a1: ghidra.pcodeCPort.context.ParserWalker) -> None: ...

    def getClass(self) -> java.lang.Class: ...

    def getPtrOffset(self) -> ghidra.pcodeCPort.semantics.ConstTpl: ...

    def getPtrSize(self) -> ghidra.pcodeCPort.semantics.ConstTpl: ...

    def getPtrSpace(self) -> ghidra.pcodeCPort.semantics.ConstTpl: ...

    def getSize(self) -> ghidra.pcodeCPort.semantics.ConstTpl: ...

    def getSpace(self) -> ghidra.pcodeCPort.semantics.ConstTpl: ...

    def getTempOffset(self) -> ghidra.pcodeCPort.semantics.ConstTpl: ...

    def getTempSpace(self) -> ghidra.pcodeCPort.semantics.ConstTpl: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def restoreXml(self, __a0: org.jdom.Element, __a1: ghidra.pcodeCPort.translate.Translate) -> None: ...

    def saveXml(self, __a0: java.io.PrintStream) -> None: ...

    def setPtrOffset(self, __a0: long) -> None: ...

    def setPtrSize(self, __a0: ghidra.pcodeCPort.semantics.ConstTpl) -> None: ...

    def setSize(self, __a0: ghidra.pcodeCPort.semantics.ConstTpl) -> None: ...

    def setTempOffset(self, __a0: long) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def ptrOffset(self) -> ghidra.pcodeCPort.semantics.ConstTpl: ...

    @property
    def ptrSize(self) -> ghidra.pcodeCPort.semantics.ConstTpl: ...

    @ptrSize.setter
    def ptrSize(self, value: ghidra.pcodeCPort.semantics.ConstTpl) -> None: ...

    @property
    def ptrSpace(self) -> ghidra.pcodeCPort.semantics.ConstTpl: ...

    @property
    def size(self) -> ghidra.pcodeCPort.semantics.ConstTpl: ...

    @size.setter
    def size(self, value: ghidra.pcodeCPort.semantics.ConstTpl) -> None: ...

    @property
    def space(self) -> ghidra.pcodeCPort.semantics.ConstTpl: ...

    @property
    def tempOffset(self) -> ghidra.pcodeCPort.semantics.ConstTpl: ...

    @property
    def tempSpace(self) -> ghidra.pcodeCPort.semantics.ConstTpl: ...
