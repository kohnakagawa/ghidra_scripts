from typing import List
import ghidra.app.plugin.core.colorizer
import ghidra.feature.vt.api.main
import ghidra.feature.vt.gui.plugin
import ghidra.feature.vt.gui.util
import ghidra.framework.model
import ghidra.framework.options
import ghidra.program.model.address
import java.lang


class VTSubToolManager(object, ghidra.feature.vt.gui.plugin.VTControllerListener, ghidra.framework.options.OptionsChangeListener):








    def addListener(self, __a0: ghidra.feature.vt.gui.plugin.VTSubToolManagerListener) -> None: ...

    def disposed(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getChangedProgramsInDestinationTool(self) -> List[object]: ...

    def getChangedProgramsInSourceTool(self) -> List[object]: ...

    def getClass(self) -> java.lang.Class: ...

    def getDestinationColorizingService(self) -> ghidra.app.plugin.core.colorizer.ColorizingService: ...

    def getSourceColorizingService(self) -> ghidra.app.plugin.core.colorizer.ColorizingService: ...

    def hashCode(self) -> int: ...

    def markupItemSelected(self, __a0: ghidra.feature.vt.api.main.VTMarkupItem) -> None: ...

    def matchSelected(self, __a0: ghidra.feature.vt.gui.util.MatchInfo) -> None: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    @overload
    def optionsChanged(self, __a0: ghidra.framework.options.Options) -> None: ...

    @overload
    def optionsChanged(self, __a0: ghidra.framework.options.ToolOptions, __a1: unicode, __a2: object, __a3: object) -> None: ...

    def removeListener(self, __a0: ghidra.feature.vt.gui.plugin.VTSubToolManagerListener) -> None: ...

    def resetTools(self) -> None: ...

    def sessionChanged(self, __a0: ghidra.feature.vt.api.main.VTSession) -> None: ...

    def sessionUpdated(self, __a0: ghidra.framework.model.DomainObjectChangedEvent) -> None: ...

    def setMatch(self, __a0: ghidra.feature.vt.api.main.VTMatch) -> None: ...

    def setSelectionInDestinationTool(self, __a0: ghidra.program.model.address.AddressSetView) -> None: ...

    def setSelectionInSourceTool(self, __a0: ghidra.program.model.address.AddressSetView) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def changedProgramsInDestinationTool(self) -> List[object]: ...

    @property
    def changedProgramsInSourceTool(self) -> List[object]: ...

    @property
    def destinationColorizingService(self) -> ghidra.app.plugin.core.colorizer.ColorizingService: ...

    @property
    def match(self) -> None: ...  # No getter available.

    @match.setter
    def match(self, value: ghidra.feature.vt.api.main.VTMatch) -> None: ...

    @property
    def selectionInDestinationTool(self) -> None: ...  # No getter available.

    @selectionInDestinationTool.setter
    def selectionInDestinationTool(self, value: ghidra.program.model.address.AddressSetView) -> None: ...

    @property
    def selectionInSourceTool(self) -> None: ...  # No getter available.

    @selectionInSourceTool.setter
    def selectionInSourceTool(self, value: ghidra.program.model.address.AddressSetView) -> None: ...

    @property
    def sourceColorizingService(self) -> ghidra.app.plugin.core.colorizer.ColorizingService: ...
