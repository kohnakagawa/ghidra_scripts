import ghidra.program.model.address
import java.lang


class OmfSymbol(object):




    def __init__(self, name: unicode, type: int, off: long, dT: int, bL: int): ...



    def equals(self, __a0: object) -> bool: ...

    def getAddress(self) -> ghidra.program.model.address.Address: ...

    def getClass(self) -> java.lang.Class: ...

    def getDataType(self) -> int: ...

    def getFrameDatum(self) -> int: ...

    def getName(self) -> unicode: ...

    def getOffset(self) -> long: ...

    def getSegmentRef(self) -> int: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setAddress(self, addr: ghidra.program.model.address.Address) -> None: ...

    def setSegmentRef(self, val: int) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def address(self) -> ghidra.program.model.address.Address: ...

    @address.setter
    def address(self, value: ghidra.program.model.address.Address) -> None: ...

    @property
    def dataType(self) -> int: ...

    @property
    def frameDatum(self) -> int: ...

    @property
    def name(self) -> unicode: ...

    @property
    def offset(self) -> long: ...

    @property
    def segmentRef(self) -> int: ...

    @segmentRef.setter
    def segmentRef(self, value: int) -> None: ...
