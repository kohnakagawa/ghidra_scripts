import ghidra.app.services
import ghidra.framework.options
import ghidra.program.model.address
import ghidra.program.model.listing
import java.lang
import java.util


class AnalysisTaskList(object):




    def __init__(self, __a0: ghidra.app.plugin.core.analysis.AutoAnalysisManager, __a1: unicode): ...



    def add(self, __a0: ghidra.app.services.Analyzer) -> None: ...

    def clear(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def hashCode(self) -> int: ...

    def iterator(self) -> java.util.Iterator: ...

    def notify(self) -> None: ...

    @overload
    def notifyAdded(self, __a0: ghidra.program.model.address.Address) -> None: ...

    @overload
    def notifyAdded(self, __a0: ghidra.program.model.address.AddressSetView) -> None: ...

    def notifyAll(self) -> None: ...

    def notifyAnalysisEnded(self, __a0: ghidra.program.model.listing.Program) -> None: ...

    @overload
    def notifyRemoved(self, __a0: ghidra.program.model.address.Address) -> None: ...

    @overload
    def notifyRemoved(self, __a0: ghidra.program.model.address.AddressSetView) -> None: ...

    def notifyResume(self) -> None: ...

    def optionsChanged(self, __a0: ghidra.framework.options.Options) -> None: ...

    def registerOptions(self, __a0: ghidra.framework.options.Options) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...
