import ghidra.feature.vt.api.impl
import ghidra.feature.vt.api.main
import ghidra.program.model.address
import java.lang
import java.util


class VTMatchSet(object):








    def addMatch(self, __a0: ghidra.feature.vt.api.main.VTMatchInfo) -> ghidra.feature.vt.api.main.VTMatch: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getID(self) -> int: ...

    def getMatchCount(self) -> int: ...

    @overload
    def getMatches(self) -> java.util.Collection: ...

    @overload
    def getMatches(self, __a0: ghidra.feature.vt.api.main.VTAssociation) -> java.util.Collection: ...

    @overload
    def getMatches(self, __a0: ghidra.program.model.address.Address, __a1: ghidra.program.model.address.Address) -> java.util.Collection: ...

    def getProgramCorrelatorInfo(self) -> ghidra.feature.vt.api.impl.VTProgramCorrelatorInfo: ...

    def getSession(self) -> ghidra.feature.vt.api.main.VTSession: ...

    def hasRemovableMatches(self) -> bool: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def removeMatch(self, __a0: ghidra.feature.vt.api.main.VTMatch) -> bool: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def ID(self) -> int: ...

    @property
    def matchCount(self) -> int: ...

    @property
    def matches(self) -> java.util.Collection: ...

    @property
    def programCorrelatorInfo(self) -> ghidra.feature.vt.api.impl.VTProgramCorrelatorInfo: ...

    @property
    def session(self) -> ghidra.feature.vt.api.main.VTSession: ...
