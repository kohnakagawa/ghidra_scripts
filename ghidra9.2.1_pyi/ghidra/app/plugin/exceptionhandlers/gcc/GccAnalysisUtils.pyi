from typing import List
import ghidra.program.model.address
import ghidra.program.model.listing
import java.lang


class GccAnalysisUtils(object):




    def __init__(self): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    @staticmethod
    def getSLEB128Length(__a0: ghidra.program.model.listing.Program, __a1: ghidra.program.model.address.Address) -> int: ...

    @staticmethod
    def getULEB128Length(__a0: ghidra.program.model.listing.Program, __a1: ghidra.program.model.address.Address) -> int: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    @staticmethod
    def readByte(__a0: ghidra.program.model.listing.Program, __a1: ghidra.program.model.address.Address) -> int: ...

    @staticmethod
    def readBytes(__a0: ghidra.program.model.listing.Program, __a1: ghidra.program.model.address.Address, __a2: List[int]) -> None: ...

    @staticmethod
    def readDWord(__a0: ghidra.program.model.listing.Program, __a1: ghidra.program.model.address.Address) -> long: ...

    @staticmethod
    def readQWord(__a0: ghidra.program.model.listing.Program, __a1: ghidra.program.model.address.Address) -> long: ...

    @staticmethod
    def readSLEB128(__a0: ghidra.program.model.listing.Program, __a1: ghidra.program.model.address.Address) -> long: ...

    @staticmethod
    def readULEB128(__a0: ghidra.program.model.listing.Program, __a1: ghidra.program.model.address.Address) -> long: ...

    @staticmethod
    def readWord(__a0: ghidra.program.model.listing.Program, __a1: ghidra.program.model.address.Address) -> int: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...
