from typing import List
import ghidra.javaclass.format.attributes
import ghidra.program.model.data
import java.lang


class CodeAttribute(ghidra.javaclass.format.attributes.AbstractAttributeInfo):




    def __init__(self, __a0: ghidra.app.util.bin.BinaryReader, __a1: List[ghidra.javaclass.format.constantpool.AbstractConstantPoolInfoJava]): ...



    def equals(self, __a0: object) -> bool: ...

    def getAttributeLength(self) -> int: ...

    def getAttributeNameIndex(self) -> int: ...

    def getAttributes(self) -> List[ghidra.javaclass.format.attributes.AbstractAttributeInfo]: ...

    def getAttributesCount(self) -> int: ...

    def getClass(self) -> java.lang.Class: ...

    def getCode(self) -> List[int]: ...

    def getCodeLength(self) -> int: ...

    def getCodeOffset(self) -> long: ...

    def getExceptionTable(self) -> List[ghidra.javaclass.format.attributes.ExceptionHandlerJava]: ...

    def getExceptionTableLength(self) -> int: ...

    def getLocalVariableTableAttribute(self) -> ghidra.javaclass.format.attributes.LocalVariableTableAttribute: ...

    def getMaxLocals(self) -> int: ...

    def getMaxStack(self) -> int: ...

    def getOffset(self) -> long: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toDataType(self) -> ghidra.program.model.data.DataType: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def attributes(self) -> List[ghidra.javaclass.format.attributes.AbstractAttributeInfo]: ...

    @property
    def attributesCount(self) -> int: ...

    @property
    def code(self) -> List[int]: ...

    @property
    def codeLength(self) -> int: ...

    @property
    def codeOffset(self) -> long: ...

    @property
    def exceptionTable(self) -> List[ghidra.javaclass.format.attributes.ExceptionHandlerJava]: ...

    @property
    def exceptionTableLength(self) -> int: ...

    @property
    def localVariableTableAttribute(self) -> ghidra.javaclass.format.attributes.LocalVariableTableAttribute: ...

    @property
    def maxLocals(self) -> int: ...

    @property
    def maxStack(self) -> int: ...
