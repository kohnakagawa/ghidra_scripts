import generic.continues
import ghidra.app.util.importer
import java.lang


class MessageLogExceptionHandler(object, generic.continues.ExceptionHandler):




    @overload
    def __init__(self): ...

    @overload
    def __init__(self, messageLog: ghidra.app.util.importer.MessageLog): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getMessageLog(self) -> ghidra.app.util.importer.MessageLog: ...

    def handle(self, t: java.lang.Throwable) -> None: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setMessageLog(self, messageLog: ghidra.app.util.importer.MessageLog) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def messageLog(self) -> ghidra.app.util.importer.MessageLog: ...

    @messageLog.setter
    def messageLog(self, value: ghidra.app.util.importer.MessageLog) -> None: ...
