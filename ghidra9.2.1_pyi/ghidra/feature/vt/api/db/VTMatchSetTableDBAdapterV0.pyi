import db
import ghidra.feature.vt.api.db
import ghidra.feature.vt.api.main
import ghidra.program.database.map
import ghidra.program.model.address
import java.lang


class VTMatchSetTableDBAdapterV0(ghidra.feature.vt.api.db.VTMatchSetTableDBAdapter):




    @overload
    def __init__(self, __a0: db.DBHandle): ...

    @overload
    def __init__(self, __a0: db.DBHandle, __a1: db.OpenMode): ...



    def createMatchSetRecord(self, __a0: long, __a1: ghidra.feature.vt.api.main.VTProgramCorrelator) -> db.Record: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getDestinationAddressSet(self, __a0: db.Record, __a1: ghidra.program.database.map.AddressMap) -> ghidra.program.model.address.AddressSet: ...

    def getNextMatchSetID(self) -> long: ...

    def getRecord(self, __a0: long) -> db.Record: ...

    def getRecords(self) -> db.RecordIterator: ...

    def getSourceAddressSet(self, __a0: db.Record, __a1: ghidra.program.database.map.AddressMap) -> ghidra.program.model.address.AddressSet: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def nextMatchSetID(self) -> long: ...

    @property
    def records(self) -> db.RecordIterator: ...
