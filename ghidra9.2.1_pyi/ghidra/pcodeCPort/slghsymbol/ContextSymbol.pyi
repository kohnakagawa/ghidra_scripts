import ghidra.pcodeCPort.context
import ghidra.pcodeCPort.sleighbase
import ghidra.pcodeCPort.slghpatexpress
import ghidra.pcodeCPort.slghsymbol
import ghidra.sleigh.grammar
import java.io
import java.lang
import java.util
import org.jdom


class ContextSymbol(ghidra.pcodeCPort.slghsymbol.ValueSymbol):
    location: ghidra.sleigh.grammar.Location



    @overload
    def __init__(self, __a0: ghidra.sleigh.grammar.Location): ...

    @overload
    def __init__(self, __a0: ghidra.sleigh.grammar.Location, __a1: unicode, __a2: ghidra.pcodeCPort.slghpatexpress.ContextField, __a3: ghidra.pcodeCPort.slghsymbol.VarnodeSymbol, __a4: int, __a5: int, __a6: bool): ...



    def collectLocalValues(self, __a0: java.util.ArrayList) -> None: ...

    @overload
    def compareTo(self, __a0: ghidra.pcodeCPort.slghsymbol.SleighSymbol) -> int: ...

    @overload
    def compareTo(self, __a0: object) -> int: ...

    def dispose(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getFixedHandle(self, __a0: ghidra.pcodeCPort.context.FixedHandle, __a1: ghidra.pcodeCPort.context.ParserWalker) -> None: ...

    def getHigh(self) -> int: ...

    def getId(self) -> int: ...

    def getLocation(self) -> ghidra.sleigh.grammar.Location: ...

    def getLow(self) -> int: ...

    def getName(self) -> unicode: ...

    def getPatternExpression(self) -> ghidra.pcodeCPort.slghpatexpress.PatternExpression: ...

    def getPatternValue(self) -> ghidra.pcodeCPort.slghpatexpress.PatternValue: ...

    def getSize(self) -> int: ...

    def getType(self) -> ghidra.pcodeCPort.slghsymbol.symbol_type: ...

    def getVarnode(self) -> ghidra.pcodeCPort.slghsymbol.VarnodeSymbol: ...

    def hashCode(self) -> int: ...

    def isFlow(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def print(self, __a0: java.io.PrintStream, __a1: ghidra.pcodeCPort.context.ParserWalker) -> None: ...

    def resolve(self, __a0: ghidra.pcodeCPort.context.ParserWalker) -> ghidra.pcodeCPort.slghsymbol.Constructor: ...

    def restoreXml(self, __a0: org.jdom.Element, __a1: ghidra.pcodeCPort.sleighbase.SleighBase) -> None: ...

    def saveXml(self, __a0: java.io.PrintStream) -> None: ...

    def saveXmlHeader(self, __a0: java.io.PrintStream) -> None: ...

    def setLocation(self, __a0: ghidra.sleigh.grammar.Location) -> None: ...

    def setWasSought(self, __a0: bool) -> None: ...

    def toDetailedString(self) -> unicode: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    def wasSought(self) -> bool: ...

    @property
    def flow(self) -> bool: ...

    @property
    def high(self) -> int: ...

    @property
    def low(self) -> int: ...

    @property
    def type(self) -> ghidra.pcodeCPort.slghsymbol.symbol_type: ...

    @property
    def varnode(self) -> ghidra.pcodeCPort.slghsymbol.VarnodeSymbol: ...
