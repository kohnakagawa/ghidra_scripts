import ghidra.feature.vt.api.main
import java.lang


class VTScore(object, java.lang.Comparable):




    @overload
    def __init__(self, __a0: float): ...

    @overload
    def __init__(self, __a0: unicode): ...



    @overload
    def compareTo(self, __a0: ghidra.feature.vt.api.main.VTScore) -> int: ...

    @overload
    def compareTo(self, __a0: object) -> int: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getFormattedLog10Score(self) -> unicode: ...

    def getFormattedScore(self) -> unicode: ...

    def getLog10Score(self) -> float: ...

    def getScore(self) -> float: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toStorageString(self) -> unicode: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def formattedLog10Score(self) -> unicode: ...

    @property
    def formattedScore(self) -> unicode: ...

    @property
    def log10Score(self) -> float: ...

    @property
    def score(self) -> float: ...
