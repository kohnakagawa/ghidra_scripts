import ghidra.program.model.address
import java.lang


class SingleAddressSetCollection(object, ghidra.program.model.address.AddressSetCollection):
    """
    A simple implementation of AddressSetCollection that contains exactly one AddressSet.
    """





    def __init__(self, set: ghidra.program.model.address.AddressSetView): ...



    def contains(self, address: ghidra.program.model.address.Address) -> bool: ...

    def equals(self, __a0: object) -> bool: ...

    def findFirstAddressInCommon(self, otherSet: ghidra.program.model.address.AddressSetView) -> ghidra.program.model.address.Address: ...

    def getClass(self) -> java.lang.Class: ...

    def getCombinedAddressSet(self) -> ghidra.program.model.address.AddressSet: ...

    def getMaxAddress(self) -> ghidra.program.model.address.Address: ...

    def getMinAddress(self) -> ghidra.program.model.address.Address: ...

    def hasFewerRangesThan(self, rangeThreshold: int) -> bool: ...

    def hashCode(self) -> int: ...

    @overload
    def intersects(self, addrSet: ghidra.program.model.address.AddressSetView) -> bool: ...

    @overload
    def intersects(self, start: ghidra.program.model.address.Address, end: ghidra.program.model.address.Address) -> bool: ...

    def isEmpty(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def combinedAddressSet(self) -> ghidra.program.model.address.AddressSet: ...

    @property
    def empty(self) -> bool: ...

    @property
    def maxAddress(self) -> ghidra.program.model.address.Address: ...

    @property
    def minAddress(self) -> ghidra.program.model.address.Address: ...
