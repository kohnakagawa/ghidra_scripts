import ghidra.graph.viewer
import java.awt
import java.awt.geom
import java.lang
import javax.swing


class AbstractVisualVertex(object, ghidra.graph.viewer.VisualVertex):
    """
    A VisualVertex implementation that implements most of the methods on the interface
    """





    def __init__(self): ...



    def dispose(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getAlpha(self) -> float: ...

    def getClass(self) -> java.lang.Class: ...

    def getComponent(self) -> javax.swing.JComponent: ...

    def getEmphasis(self) -> float: ...

    def getLocation(self) -> java.awt.geom.Point2D: ...

    def hashCode(self) -> int: ...

    def isFocused(self) -> bool: ...

    def isGrabbable(self, c: java.awt.Component) -> bool: ...

    def isHovered(self) -> bool: ...

    def isSelected(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setAlpha(self, alpha: float) -> None: ...

    def setEmphasis(self, emphasisLevel: float) -> None: ...

    def setFocused(self, focused: bool) -> None: ...

    def setHovered(self, hovered: bool) -> None: ...

    def setLocation(self, location: java.awt.geom.Point2D) -> None: ...

    def setSelected(self, selected: bool) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def alpha(self) -> float: ...

    @alpha.setter
    def alpha(self, value: float) -> None: ...

    @property
    def component(self) -> javax.swing.JComponent: ...

    @property
    def emphasis(self) -> float: ...

    @emphasis.setter
    def emphasis(self, value: float) -> None: ...

    @property
    def focused(self) -> bool: ...

    @focused.setter
    def focused(self, value: bool) -> None: ...

    @property
    def hovered(self) -> bool: ...

    @hovered.setter
    def hovered(self, value: bool) -> None: ...

    @property
    def location(self) -> java.awt.geom.Point2D: ...

    @location.setter
    def location(self, value: java.awt.geom.Point2D) -> None: ...

    @property
    def selected(self) -> bool: ...

    @selected.setter
    def selected(self, value: bool) -> None: ...
