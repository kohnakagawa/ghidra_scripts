import ghidra.program.model.address
import ghidra.program.model.data
import ghidra.program.model.mem
import ghidra.program.util.string
import java.lang


class FoundStringWithWordStatus(ghidra.program.util.string.FoundString):




    @overload
    def __init__(self, __a0: ghidra.program.util.string.FoundString): ...

    @overload
    def __init__(self, __a0: ghidra.program.model.address.Address, __a1: int, __a2: ghidra.program.model.data.DataType): ...

    @overload
    def __init__(self, __a0: ghidra.program.model.address.Address, __a1: int, __a2: ghidra.program.model.data.DataType, __a3: bool): ...

    @overload
    def __init__(self, __a0: ghidra.program.model.address.Address, __a1: int, __a2: ghidra.program.model.data.DataType, __a3: ghidra.program.util.string.FoundString.DefinedState): ...

    @overload
    def __init__(self, __a0: ghidra.program.model.address.Address, __a1: int, __a2: ghidra.program.model.data.DataType, __a3: ghidra.program.util.string.FoundString.DefinedState, __a4: bool): ...



    @overload
    def compareTo(self, __a0: ghidra.program.util.string.FoundString) -> int: ...

    @overload
    def compareTo(self, __a0: object) -> int: ...

    def conflicts(self) -> bool: ...

    def equals(self, __a0: object) -> bool: ...

    def getAddress(self) -> ghidra.program.model.address.Address: ...

    def getClass(self) -> java.lang.Class: ...

    def getDataInstance(self, __a0: ghidra.program.model.mem.Memory) -> ghidra.program.model.data.StringDataInstance: ...

    def getDataType(self) -> ghidra.program.model.data.DataType: ...

    def getDefinedState(self) -> ghidra.program.util.string.FoundString.DefinedState: ...

    def getEndAddress(self) -> ghidra.program.model.address.Address: ...

    def getLength(self) -> int: ...

    def getString(self, __a0: ghidra.program.model.mem.Memory) -> unicode: ...

    def getStringLength(self, __a0: ghidra.program.model.mem.Memory) -> int: ...

    def hashCode(self) -> int: ...

    def isDefined(self) -> bool: ...

    def isHighConfidenceWord(self) -> bool: ...

    def isPartiallyDefined(self) -> bool: ...

    def isPascall(self) -> bool: ...

    def isUndefined(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setAddress(self, __a0: ghidra.program.model.address.Address) -> None: ...

    def setDefinedState(self, __a0: ghidra.program.util.string.FoundString.DefinedState) -> None: ...

    def setIsHighConfidenceWord(self, __a0: bool) -> None: ...

    def setLength(self, __a0: int) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def highConfidenceWord(self) -> bool: ...
