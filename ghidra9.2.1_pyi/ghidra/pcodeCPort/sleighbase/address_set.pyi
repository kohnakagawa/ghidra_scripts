import generic.stl
import java.lang


class address_set(generic.stl.SetSTL):








    def begin(self) -> generic.stl.IteratorSTL: ...

    def clear(self) -> None: ...

    def contains(self, __a0: object) -> bool: ...

    def end(self) -> generic.stl.IteratorSTL: ...

    def equals(self, __a0: object) -> bool: ...

    @overload
    def erase(self, __a0: generic.stl.IteratorSTL) -> None: ...

    @overload
    def erase(self, __a0: object) -> None: ...

    def find(self, __a0: object) -> generic.stl.IteratorSTL: ...

    def getClass(self) -> java.lang.Class: ...

    def hashCode(self) -> int: ...

    def insert(self, __a0: object) -> generic.stl.Pair: ...

    def isEmpty(self) -> bool: ...

    def lower_bound(self, __a0: object) -> generic.stl.IteratorSTL: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def rBegin(self) -> generic.stl.IteratorSTL: ...

    def rEnd(self) -> generic.stl.IteratorSTL: ...

    def remove(self, __a0: object) -> bool: ...

    def toString(self) -> unicode: ...

    def upper_bound(self, __a0: object) -> generic.stl.IteratorSTL: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...
