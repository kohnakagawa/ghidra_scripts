from typing import List
import ghidra.app.plugin.core.functiongraph.mvc
import ghidra.util
import java.lang
import org.jdom


class LazySaveableXML(ghidra.app.plugin.core.functiongraph.mvc.SaveableXML):




    def __init__(self): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getElement(self) -> org.jdom.Element: ...

    def getObjectStorageFields(self) -> List[java.lang.Class]: ...

    def getSchemaVersion(self) -> int: ...

    def hashCode(self) -> int: ...

    def isEmpty(self) -> bool: ...

    def isPrivate(self) -> bool: ...

    def isUpgradeable(self, __a0: int) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def restore(self, __a0: ghidra.util.ObjectStorage) -> None: ...

    def save(self, __a0: ghidra.util.ObjectStorage) -> None: ...

    def toString(self) -> unicode: ...

    def upgrade(self, __a0: ghidra.util.ObjectStorage, __a1: int, __a2: ghidra.util.ObjectStorage) -> bool: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def empty(self) -> bool: ...
