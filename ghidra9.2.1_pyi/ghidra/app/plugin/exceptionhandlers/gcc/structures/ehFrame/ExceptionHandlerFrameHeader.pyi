import ghidra.program.model.address
import java.lang


class ExceptionHandlerFrameHeader(object):




    def __init__(self, __a0: ghidra.util.task.TaskMonitor, __a1: ghidra.program.model.listing.Program): ...



    def addToDataTypeManager(self) -> None: ...

    def create(self, __a0: ghidra.program.model.address.Address) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getEh_FrameDescEntryCntEncoding(self) -> int: ...

    def getEh_FramePtrEncoding(self) -> int: ...

    def getEh_FrameTableEncoding(self) -> int: ...

    def getEh_FrameVersion(self) -> int: ...

    def getLength(self) -> int: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def eh_FrameDescEntryCntEncoding(self) -> int: ...

    @property
    def eh_FramePtrEncoding(self) -> int: ...

    @property
    def eh_FrameTableEncoding(self) -> int: ...

    @property
    def eh_FrameVersion(self) -> int: ...

    @property
    def length(self) -> int: ...
