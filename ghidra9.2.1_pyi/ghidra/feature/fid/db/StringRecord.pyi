import db
import ghidra.program.database
import ghidra.util
import java.lang


class StringRecord(ghidra.program.database.DatabaseObject):




    def __init__(self, __a0: ghidra.program.database.DBObjectCache, __a1: long, __a2: unicode): ...



    def checkDeleted(self) -> None: ...

    @overload
    def checkIsValid(self) -> bool: ...

    @overload
    def checkIsValid(self, __a0: db.Record) -> bool: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getKey(self) -> long: ...

    def getValue(self) -> unicode: ...

    def hashCode(self) -> int: ...

    def isDeleted(self) -> bool: ...

    def isInvalid(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setInvalid(self) -> None: ...

    def toString(self) -> unicode: ...

    def validate(self, __a0: ghidra.util.Lock) -> bool: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def value(self) -> unicode: ...
