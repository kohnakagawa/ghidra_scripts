import ghidra.app.util.bin.format.pdb2.pdbreader
import java.lang


class ImageSectionHeader(object):




    def __init__(self, __a0: ghidra.app.util.bin.format.pdb2.pdbreader.AbstractPdb): ...



    def equals(self, __a0: object) -> bool: ...

    def getCharacteristics(self) -> long: ...

    def getClass(self) -> java.lang.Class: ...

    def getLineNumbersPointer(self) -> long: ...

    def getName(self) -> unicode: ...

    def getNumLineNumbers(self) -> int: ...

    def getNumRelocations(self) -> int: ...

    def getRawDataPointer(self) -> long: ...

    def getRawDataSize(self) -> long: ...

    def getRelocationsPointer(self) -> long: ...

    def getUnionPAVS(self) -> long: ...

    def getVirtualAddress(self) -> long: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def parse(self, __a0: ghidra.app.util.bin.format.pdb2.pdbreader.PdbByteReader) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def characteristics(self) -> long: ...

    @property
    def lineNumbersPointer(self) -> long: ...

    @property
    def name(self) -> unicode: ...

    @property
    def numLineNumbers(self) -> int: ...

    @property
    def numRelocations(self) -> int: ...

    @property
    def rawDataPointer(self) -> long: ...

    @property
    def rawDataSize(self) -> long: ...

    @property
    def relocationsPointer(self) -> long: ...

    @property
    def unionPAVS(self) -> long: ...

    @property
    def virtualAddress(self) -> long: ...
