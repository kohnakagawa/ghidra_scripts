from typing import List
import ghidra.app.nav
import ghidra.framework.options
import ghidra.program.model.listing
import ghidra.program.util
import java.lang


class LocationMemento(object):




    @overload
    def __init__(self, saveState: ghidra.framework.options.SaveState, programs: List[ghidra.program.model.listing.Program]): ...

    @overload
    def __init__(self, program: ghidra.program.model.listing.Program, location: ghidra.program.util.ProgramLocation): ...



    def equals(self, obj: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getLocationDescription(self) -> unicode: ...

    @staticmethod
    def getLocationMemento(saveState: ghidra.framework.options.SaveState, programs: List[ghidra.program.model.listing.Program]) -> ghidra.app.nav.LocationMemento: ...

    def getProgram(self) -> ghidra.program.model.listing.Program: ...

    def getProgramLocation(self) -> ghidra.program.util.ProgramLocation: ...

    def hashCode(self) -> int: ...

    def isValid(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def saveState(self, saveState: ghidra.framework.options.SaveState) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def locationDescription(self) -> unicode: ...

    @property
    def program(self) -> ghidra.program.model.listing.Program: ...

    @property
    def programLocation(self) -> ghidra.program.util.ProgramLocation: ...

    @property
    def valid(self) -> bool: ...
