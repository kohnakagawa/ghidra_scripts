import ghidra.app.util.html
import ghidra.program.model.data
import java.awt
import java.lang


class DataTypeLine(object, ghidra.app.util.html.ValidatableLine):
    INVALID_COLOR: java.awt.Color = java.awt.Color[r=255,g=0,b=0]







    def copy(self) -> ghidra.app.util.html.ValidatableLine: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getComment(self) -> unicode: ...

    def getCommentColor(self) -> java.awt.Color: ...

    def getDataType(self) -> ghidra.program.model.data.DataType: ...

    def getName(self) -> unicode: ...

    def getNameColor(self) -> java.awt.Color: ...

    def getText(self) -> unicode: ...

    def getType(self) -> unicode: ...

    def getTypeColor(self) -> java.awt.Color: ...

    def hasUniversalId(self) -> bool: ...

    def hashCode(self) -> int: ...

    def isDiffColored(self) -> bool: ...

    def isFlexibleArray(self) -> bool:
        """
        Determine if data type should be treated as flexible array
        @return true if data type should be treated as flexible array
        """
        ...

    def isValidated(self) -> bool: ...

    def matches(self, otherValidatableLine: ghidra.app.util.html.ValidatableLine) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setCommentColor(self, commentColor: java.awt.Color) -> None: ...

    def setNameColor(self, nameColor: java.awt.Color) -> None: ...

    def setTypeColor(self, typeColor: java.awt.Color) -> None: ...

    def setValidationLine(self, line: ghidra.app.util.html.ValidatableLine) -> None: ...

    def toString(self) -> unicode: ...

    def updateColor(self, otherValidatableLine: ghidra.app.util.html.ValidatableLine, invalidColor: java.awt.Color) -> None: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def comment(self) -> unicode: ...

    @property
    def commentColor(self) -> java.awt.Color: ...

    @commentColor.setter
    def commentColor(self, value: java.awt.Color) -> None: ...

    @property
    def dataType(self) -> ghidra.program.model.data.DataType: ...

    @property
    def diffColored(self) -> bool: ...

    @property
    def flexibleArray(self) -> bool: ...

    @property
    def name(self) -> unicode: ...

    @property
    def nameColor(self) -> java.awt.Color: ...

    @nameColor.setter
    def nameColor(self, value: java.awt.Color) -> None: ...

    @property
    def text(self) -> unicode: ...

    @property
    def type(self) -> unicode: ...

    @property
    def typeColor(self) -> java.awt.Color: ...

    @typeColor.setter
    def typeColor(self, value: java.awt.Color) -> None: ...

    @property
    def validated(self) -> bool: ...

    @property
    def validationLine(self) -> None: ...  # No getter available.

    @validationLine.setter
    def validationLine(self, value: ghidra.app.util.html.ValidatableLine) -> None: ...
