from typing import List
import ghidra.app.plugin.core.instructionsearch.model
import java.lang
import java.util
import javax.swing.event
import javax.swing.table


class InstructionTableModel(javax.swing.table.DefaultTableModel, ghidra.app.plugin.core.instructionsearch.model.InstructionTableObserver):




    def __init__(self, __a0: List[ghidra.app.plugin.core.instructionsearch.model.InstructionTableDataObject], __a1: List[object]): ...



    @overload
    def addColumn(self, __a0: object) -> None: ...

    @overload
    def addColumn(self, __a0: object, __a1: List[object]) -> None: ...

    @overload
    def addColumn(self, __a0: object, __a1: java.util.Vector) -> None: ...

    @overload
    def addRow(self, __a0: List[object]) -> None: ...

    @overload
    def addRow(self, __a0: java.util.Vector) -> None: ...

    def addTableModelListener(self, __a0: javax.swing.event.TableModelListener) -> None: ...

    def changed(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def findColumn(self, __a0: unicode) -> int: ...

    def fireTableCellUpdated(self, __a0: int, __a1: int) -> None: ...

    def fireTableChanged(self, __a0: javax.swing.event.TableModelEvent) -> None: ...

    def fireTableDataChanged(self) -> None: ...

    def fireTableRowsDeleted(self, __a0: int, __a1: int) -> None: ...

    def fireTableRowsInserted(self, __a0: int, __a1: int) -> None: ...

    def fireTableRowsUpdated(self, __a0: int, __a1: int) -> None: ...

    def fireTableStructureChanged(self) -> None: ...

    def getClass(self) -> java.lang.Class: ...

    def getColumnClass(self, __a0: int) -> java.lang.Class: ...

    def getColumnCount(self) -> int: ...

    def getColumnName(self, __a0: int) -> unicode: ...

    def getDataVector(self) -> java.util.Vector: ...

    def getListeners(self, __a0: java.lang.Class) -> List[java.util.EventListener]: ...

    def getRowCount(self) -> int: ...

    def getTableModelListeners(self) -> List[javax.swing.event.TableModelListener]: ...

    def getValueAt(self, __a0: int, __a1: int) -> object: ...

    def hashCode(self) -> int: ...

    @overload
    def insertRow(self, __a0: int, __a1: List[object]) -> None: ...

    @overload
    def insertRow(self, __a0: int, __a1: java.util.Vector) -> None: ...

    def isCellEditable(self, __a0: int, __a1: int) -> bool: ...

    def moveRow(self, __a0: int, __a1: int, __a2: int) -> None: ...

    def newDataAvailable(self, __a0: javax.swing.event.TableModelEvent) -> None: ...

    def newRowsAdded(self, __a0: javax.swing.event.TableModelEvent) -> None: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def removeRow(self, __a0: int) -> None: ...

    def removeTableModelListener(self, __a0: javax.swing.event.TableModelListener) -> None: ...

    def rowsRemoved(self, __a0: javax.swing.event.TableModelEvent) -> None: ...

    def setColumnCount(self, __a0: int) -> None: ...

    @overload
    def setColumnIdentifiers(self, __a0: List[object]) -> None: ...

    @overload
    def setColumnIdentifiers(self, __a0: java.util.Vector) -> None: ...

    @overload
    def setDataVector(self, __a0: List[object], __a1: List[object]) -> None: ...

    @overload
    def setDataVector(self, __a0: java.util.Vector, __a1: java.util.Vector) -> None: ...

    def setNumRows(self, __a0: int) -> None: ...

    def setRowCount(self, __a0: int) -> None: ...

    def setValueAt(self, __a0: object, __a1: int, __a2: int) -> None: ...

    def toString(self) -> unicode: ...

    def update(self, __a0: java.util.Observable, __a1: object) -> None: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...
