import ghidra.app.util.bin.format.pdb2.pdbreader
import java.lang


class Numeric(object):




    def __init__(self, __a0: ghidra.app.util.bin.format.pdb2.pdbreader.PdbByteReader): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getIntegral(self) -> long: ...

    def getNumericObject(self) -> object: ...

    def getSize(self) -> int: ...

    def getSubTypeIndex(self) -> int: ...

    def hashCode(self) -> int: ...

    def isIntegral(self) -> bool: ...

    def isSigned(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def parse(self, __a0: ghidra.app.util.bin.format.pdb2.pdbreader.PdbByteReader) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def integral(self) -> bool: ...

    @property
    def numericObject(self) -> object: ...

    @property
    def signed(self) -> bool: ...

    @property
    def size(self) -> int: ...

    @property
    def subTypeIndex(self) -> int: ...
