import ghidra.app.plugin.core.navigation.locationreferences
import ghidra.program.model.address
import ghidra.program.util
import java.lang


class LocationReference(object, java.lang.Comparable):








    @overload
    def compareTo(self, __a0: ghidra.app.plugin.core.navigation.locationreferences.LocationReference) -> int: ...

    @overload
    def compareTo(self, __a0: object) -> int: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getContext(self) -> unicode: ...

    def getLocationOfUse(self) -> ghidra.program.model.address.Address: ...

    def getProgramLocation(self) -> ghidra.program.util.ProgramLocation: ...

    def getRefTypeString(self) -> unicode: ...

    def hashCode(self) -> int: ...

    def isOffcutReference(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def context(self) -> unicode: ...

    @property
    def locationOfUse(self) -> ghidra.program.model.address.Address: ...

    @property
    def offcutReference(self) -> bool: ...

    @property
    def programLocation(self) -> ghidra.program.util.ProgramLocation: ...

    @property
    def refTypeString(self) -> unicode: ...
