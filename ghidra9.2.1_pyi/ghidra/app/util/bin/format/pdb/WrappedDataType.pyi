import ghidra.program.model.data
import java.lang


class WrappedDataType(object):




    def __init__(self, __a0: ghidra.program.model.data.DataType, __a1: bool, __a2: bool): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getDataType(self) -> ghidra.program.model.data.DataType: ...

    def hashCode(self) -> int: ...

    def isNoType(self) -> bool: ...

    def isZeroLengthArray(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def dataType(self) -> ghidra.program.model.data.DataType: ...

    @property
    def noType(self) -> bool: ...

    @property
    def zeroLengthArray(self) -> bool: ...
