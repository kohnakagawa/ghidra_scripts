from typing import List
import ghidra.program.model.address
import java.lang


class SubroutineMatch(object):




    def __init__(self, __a0: unicode): ...



    def add(self, __a0: ghidra.program.model.address.Address, __a1: bool) -> bool: ...

    def equals(self, __a0: object) -> bool: ...

    def getAAddresses(self) -> List[ghidra.program.model.address.Address]: ...

    def getBAddresses(self) -> List[ghidra.program.model.address.Address]: ...

    def getClass(self) -> java.lang.Class: ...

    def getReason(self) -> unicode: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def remove(self, __a0: ghidra.program.model.address.Address, __a1: bool) -> bool: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def AAddresses(self) -> List[ghidra.program.model.address.Address]: ...

    @property
    def BAddresses(self) -> List[ghidra.program.model.address.Address]: ...

    @property
    def reason(self) -> unicode: ...
