import ghidra.graph.viewer.edge.routing
import java.lang


class ArticulatedEdgeRouter(ghidra.graph.viewer.edge.routing.BasicEdgeRouter):




    def __init__(self, viewer: edu.uci.ics.jung.visualization.VisualizationServer, edges: java.util.Collection): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def route(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...
