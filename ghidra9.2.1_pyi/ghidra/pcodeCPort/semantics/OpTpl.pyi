import generic.stl
import ghidra.pcodeCPort.opcodes
import ghidra.pcodeCPort.semantics
import ghidra.pcodeCPort.translate
import java.io
import java.lang
import org.jdom


class OpTpl(object):
    location: ghidra.sleigh.grammar.Location



    @overload
    def __init__(self, __a0: ghidra.sleigh.grammar.Location): ...

    @overload
    def __init__(self, __a0: ghidra.sleigh.grammar.Location, __a1: ghidra.pcodeCPort.opcodes.OpCode): ...



    def addInput(self, __a0: ghidra.pcodeCPort.semantics.VarnodeTpl) -> None: ...

    def changeHandleIndex(self, __a0: generic.stl.VectorSTL) -> None: ...

    def clearOutput(self) -> None: ...

    def dispose(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getIn(self, __a0: int) -> ghidra.pcodeCPort.semantics.VarnodeTpl: ...

    def getOpcode(self) -> ghidra.pcodeCPort.opcodes.OpCode: ...

    def getOut(self) -> ghidra.pcodeCPort.semantics.VarnodeTpl: ...

    def hashCode(self) -> int: ...

    def isZeroSize(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def numInput(self) -> int: ...

    def removeInput(self, __a0: int) -> None: ...

    def restoreXml(self, __a0: org.jdom.Element, __a1: ghidra.pcodeCPort.translate.Translate) -> None: ...

    def saveXml(self, __a0: java.io.PrintStream) -> None: ...

    def setInput(self, __a0: ghidra.pcodeCPort.semantics.VarnodeTpl, __a1: int) -> None: ...

    def setOpcode(self, __a0: ghidra.pcodeCPort.opcodes.OpCode) -> None: ...

    def setOutput(self, __a0: ghidra.pcodeCPort.semantics.VarnodeTpl) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def opcode(self) -> ghidra.pcodeCPort.opcodes.OpCode: ...

    @opcode.setter
    def opcode(self, value: ghidra.pcodeCPort.opcodes.OpCode) -> None: ...

    @property
    def out(self) -> ghidra.pcodeCPort.semantics.VarnodeTpl: ...

    @property
    def output(self) -> None: ...  # No getter available.

    @output.setter
    def output(self, value: ghidra.pcodeCPort.semantics.VarnodeTpl) -> None: ...

    @property
    def zeroSize(self) -> bool: ...
