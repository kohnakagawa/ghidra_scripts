import ghidra.app.util.bin.format.macho.prelink
import java.lang


class PrelinkMap(object):




    def __init__(self): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getPrelinkBundlePath(self) -> unicode: ...

    def getPrelinkExecutable(self) -> long: ...

    def getPrelinkExecutableLoadAddr(self) -> long: ...

    def getPrelinkExecutableSize(self) -> long: ...

    def getPrelinkKmodInfo(self) -> long: ...

    def getPrelinkModuleIndex(self) -> long: ...

    def getPrelinkUUID(self) -> unicode: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    @overload
    def put(self, key: unicode, value: long) -> None: ...

    @overload
    def put(self, key: unicode, value: bool) -> None: ...

    @overload
    def put(self, key: unicode, value: unicode) -> None: ...

    @overload
    def put(self, key: unicode, value: ghidra.app.util.bin.format.macho.prelink.PrelinkMap) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def prelinkBundlePath(self) -> unicode: ...

    @property
    def prelinkExecutable(self) -> long: ...

    @property
    def prelinkExecutableLoadAddr(self) -> long: ...

    @property
    def prelinkExecutableSize(self) -> long: ...

    @property
    def prelinkKmodInfo(self) -> long: ...

    @property
    def prelinkModuleIndex(self) -> long: ...

    @property
    def prelinkUUID(self) -> unicode: ...
