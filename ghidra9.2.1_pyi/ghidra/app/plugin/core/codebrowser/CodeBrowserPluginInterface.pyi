import ghidra.app.plugin.core.codebrowser
import ghidra.app.services
import ghidra.framework.plugintool
import ghidra.program.util
import java.lang


class CodeBrowserPluginInterface(object):








    def createNewDisconnectedProvider(self) -> ghidra.app.plugin.core.codebrowser.CodeViewerProvider: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getName(self) -> unicode: ...

    def getTool(self) -> ghidra.framework.plugintool.PluginTool: ...

    def getViewManager(self, __a0: ghidra.app.plugin.core.codebrowser.CodeViewerProvider) -> ghidra.app.services.ViewManagerService: ...

    def hashCode(self) -> int: ...

    def highlightChanged(self, __a0: ghidra.app.plugin.core.codebrowser.CodeViewerProvider, __a1: ghidra.program.util.ProgramSelection) -> None: ...

    def isDisposed(self) -> bool: ...

    def locationChanged(self, __a0: ghidra.app.plugin.core.codebrowser.CodeViewerProvider, __a1: ghidra.program.util.ProgramLocation) -> None: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def providerClosed(self, __a0: ghidra.app.plugin.core.codebrowser.CodeViewerProvider) -> None: ...

    def selectionChanged(self, __a0: ghidra.app.plugin.core.codebrowser.CodeViewerProvider, __a1: ghidra.program.util.ProgramSelection) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def disposed(self) -> bool: ...

    @property
    def name(self) -> unicode: ...

    @property
    def tool(self) -> ghidra.framework.plugintool.PluginTool: ...
