import generic.stl
import ghidra.pcodeCPort.slgh_compile
import java.lang


class ModuleDefinitionsAdapter(object, ghidra.pcodeCPort.slgh_compile.PreprocessorDefinitions):




    def __init__(self): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def hashCode(self) -> int: ...

    def lookup(self, key: unicode) -> generic.stl.Pair: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def set(self, key: unicode, value: unicode) -> None: ...

    def toString(self) -> unicode: ...

    def undefine(self, key: unicode) -> None: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...
