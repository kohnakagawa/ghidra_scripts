from typing import List
import ghidra.framework.options
import ghidra.program.model.address
import ghidra.program.model.listing
import ghidra.program.util
import java.lang


class ByteViewerProgramLocation(ghidra.program.util.ProgramLocation):




    def __init__(self): ...



    @overload
    def compareTo(self, __a0: ghidra.program.util.ProgramLocation) -> int: ...

    @overload
    def compareTo(self, __a0: object) -> int: ...

    def equals(self, __a0: object) -> bool: ...

    def getAddress(self) -> ghidra.program.model.address.Address: ...

    def getByteAddress(self) -> ghidra.program.model.address.Address: ...

    def getCharOffset(self) -> int: ...

    def getClass(self) -> java.lang.Class: ...

    def getColumn(self) -> int: ...

    def getComponentPath(self) -> List[int]: ...

    @staticmethod
    def getLocation(__a0: ghidra.program.model.listing.Program, __a1: ghidra.framework.options.SaveState) -> ghidra.program.util.ProgramLocation: ...

    def getProgram(self) -> ghidra.program.model.listing.Program: ...

    def getRefAddress(self) -> ghidra.program.model.address.Address: ...

    def getRow(self) -> int: ...

    def hashCode(self) -> int: ...

    def isValid(self, __a0: ghidra.program.model.listing.Program) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def restoreState(self, __a0: ghidra.program.model.listing.Program, __a1: ghidra.framework.options.SaveState) -> None: ...

    def saveState(self, __a0: ghidra.framework.options.SaveState) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...
