from typing import List
import db
import ghidra.framework.data
import ghidra.program.model.listing
import java.lang


class DataTypeArchiveDBChangeSet(object, ghidra.program.model.listing.DataTypeArchiveChangeSet, ghidra.framework.data.DomainObjectDBChangeSet):
    """
    Holds changes made to a data type archive.
    """









    def categoryAdded(self, id: long) -> None: ...

    def categoryChanged(self, id: long) -> None: ...

    @overload
    def clearUndo(self) -> None: ...

    @overload
    def clearUndo(self, isCheckedOut: bool) -> None: ...

    def dataTypeAdded(self, id: long) -> None: ...

    def dataTypeChanged(self, id: long) -> None: ...

    def endTransaction(self, commit: bool) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getCategoryAdditions(self) -> List[long]: ...

    def getCategoryChanges(self) -> List[long]: ...

    def getClass(self) -> java.lang.Class: ...

    def getDataTypeAdditions(self) -> List[long]: ...

    def getDataTypeChanges(self) -> List[long]: ...

    def getSourceArchiveAdditions(self) -> List[long]: ...

    def getSourceArchiveChanges(self) -> List[long]: ...

    def hasChanges(self) -> bool: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def read(self, dbh: db.DBHandle) -> None: ...

    def redo(self) -> None: ...

    def setMaxUndos(self, numUndos: int) -> None: ...

    def sourceArchiveAdded(self, id: long) -> None: ...

    def sourceArchiveChanged(self, id: long) -> None: ...

    def startTransaction(self) -> None: ...

    def toString(self) -> unicode: ...

    def undo(self) -> None: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    def write(self, dbh: db.DBHandle, isRecoverySave: bool) -> None: ...
