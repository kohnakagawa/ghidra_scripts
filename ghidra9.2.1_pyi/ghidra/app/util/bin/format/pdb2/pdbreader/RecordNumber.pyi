import ghidra.app.util.bin.format.pdb2.pdbreader
import java.lang


class RecordNumber(object):
    NO_TYPE: ghidra.app.util.bin.format.pdb2.pdbreader.RecordNumber = TYPE[0]
    T_NOTYPE: int = 0
    T_VOID: int = 3







    def equals(self, __a0: object) -> bool: ...

    def getCategory(self) -> ghidra.app.util.bin.format.pdb2.pdbreader.RecordCategory: ...

    def getClass(self) -> java.lang.Class: ...

    def getNumber(self) -> int: ...

    def hashCode(self) -> int: ...

    def isNoType(self) -> bool: ...

    @staticmethod
    def itemRecordNumber(__a0: int) -> ghidra.app.util.bin.format.pdb2.pdbreader.RecordNumber: ...

    @staticmethod
    def make(__a0: ghidra.app.util.bin.format.pdb2.pdbreader.RecordCategory, __a1: int) -> ghidra.app.util.bin.format.pdb2.pdbreader.RecordNumber: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    @staticmethod
    def parse(__a0: ghidra.app.util.bin.format.pdb2.pdbreader.AbstractPdb, __a1: ghidra.app.util.bin.format.pdb2.pdbreader.PdbByteReader, __a2: ghidra.app.util.bin.format.pdb2.pdbreader.RecordCategory, __a3: int) -> ghidra.app.util.bin.format.pdb2.pdbreader.RecordNumber: ...

    @staticmethod
    def parseNoWitness(__a0: ghidra.app.util.bin.format.pdb2.pdbreader.AbstractPdb, __a1: ghidra.app.util.bin.format.pdb2.pdbreader.PdbByteReader, __a2: ghidra.app.util.bin.format.pdb2.pdbreader.RecordCategory, __a3: int) -> ghidra.app.util.bin.format.pdb2.pdbreader.RecordNumber: ...

    def toString(self) -> unicode: ...

    @staticmethod
    def typeRecordNumber(__a0: int) -> ghidra.app.util.bin.format.pdb2.pdbreader.RecordNumber: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def category(self) -> ghidra.app.util.bin.format.pdb2.pdbreader.RecordCategory: ...

    @property
    def noType(self) -> bool: ...

    @property
    def number(self) -> int: ...
