from typing import List
import docking
import docking.action
import ghidra.app.services
import ghidra.program.model.address
import ghidra.program.util
import java.awt.event
import java.lang
import javax.swing


class ViewProviderService(ghidra.app.services.ViewService, object):








    def addToView(self, __a0: ghidra.program.util.ProgramLocation) -> ghidra.program.model.address.AddressSetView: ...

    def equals(self, __a0: object) -> bool: ...

    def getActionContext(self, __a0: java.awt.event.MouseEvent) -> docking.ActionContext: ...

    def getActiveObject(self) -> object: ...

    def getActivePopupObject(self, __a0: java.awt.event.MouseEvent) -> object: ...

    def getClass(self) -> java.lang.Class: ...

    def getCurrentView(self) -> ghidra.program.model.address.AddressSetView: ...

    def getToolBarActions(self) -> List[docking.action.DockingAction]: ...

    def getViewComponent(self) -> javax.swing.JComponent: ...

    def getViewName(self) -> unicode: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setHasFocus(self, __a0: bool) -> None: ...

    def toString(self) -> unicode: ...

    def viewClosed(self) -> bool: ...

    def viewDeleted(self) -> bool: ...

    def viewRenamed(self, __a0: unicode) -> bool: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def activeObject(self) -> object: ...

    @property
    def currentView(self) -> ghidra.program.model.address.AddressSetView: ...

    @property
    def hasFocus(self) -> None: ...  # No getter available.

    @hasFocus.setter
    def hasFocus(self, value: bool) -> None: ...

    @property
    def toolBarActions(self) -> List[docking.action.DockingAction]: ...

    @property
    def viewComponent(self) -> javax.swing.JComponent: ...

    @property
    def viewName(self) -> unicode: ...
