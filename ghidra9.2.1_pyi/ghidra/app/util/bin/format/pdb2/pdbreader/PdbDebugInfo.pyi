from typing import List
import ghidra.app.util.bin.format.pdb2.pdbreader
import ghidra.app.util.bin.format.pdb2.pdbreader.symbol
import ghidra.util.task
import java.lang
import java.util


class PdbDebugInfo(object):
    LENGTH_SIZE: int = 4
    STREAM_NUMBER_SIZE: int = 2



    def __init__(self, __a0: ghidra.app.util.bin.format.pdb2.pdbreader.AbstractPdb, __a1: int): ...



    def deserialize(self, __a0: bool, __a1: ghidra.util.task.TaskMonitor) -> long: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getGlobalSymbolInformation(self) -> ghidra.app.util.bin.format.pdb2.pdbreader.GlobalSymbolInformation: ...

    def getModuleInformation(self, __a0: int) -> ghidra.app.util.bin.format.pdb2.pdbreader.AbstractModuleInformation: ...

    def getModuleInformationList(self) -> List[object]: ...

    def getModuleSymbolsByOffset(self, __a0: int) -> java.util.Map: ...

    def getNumModules(self) -> int: ...

    def getPublicSymbolInformation(self) -> ghidra.app.util.bin.format.pdb2.pdbreader.PublicSymbolInformation: ...

    def getSectionContributionList(self) -> List[object]: ...

    def getSegmentMapList(self) -> List[object]: ...

    def getSymbolForModuleAndOffsetOfRecord(self, __a0: int, __a1: long) -> ghidra.app.util.bin.format.pdb2.pdbreader.symbol.AbstractMsSymbol: ...

    def getSymbolForOffsetOfRecord(self, __a0: long) -> ghidra.app.util.bin.format.pdb2.pdbreader.symbol.AbstractMsSymbol: ...

    def getSymbolRecords(self) -> ghidra.app.util.bin.format.pdb2.pdbreader.SymbolRecords: ...

    def getSymbolsByOffset(self) -> java.util.Map: ...

    @staticmethod
    def getVersionNumberSize() -> int: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def globalSymbolInformation(self) -> ghidra.app.util.bin.format.pdb2.pdbreader.GlobalSymbolInformation: ...

    @property
    def moduleInformationList(self) -> List[object]: ...

    @property
    def numModules(self) -> int: ...

    @property
    def publicSymbolInformation(self) -> ghidra.app.util.bin.format.pdb2.pdbreader.PublicSymbolInformation: ...

    @property
    def sectionContributionList(self) -> List[object]: ...

    @property
    def segmentMapList(self) -> List[object]: ...

    @property
    def symbolRecords(self) -> ghidra.app.util.bin.format.pdb2.pdbreader.SymbolRecords: ...

    @property
    def symbolsByOffset(self) -> java.util.Map: ...
