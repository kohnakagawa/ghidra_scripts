from typing import List
import ghidra.xml
import java.lang
import java.util


class XmlElementImpl(object, ghidra.xml.XmlElement):




    def __init__(self, isStart: bool, isEnd: bool, name: unicode, level: int, attributes: java.util.LinkedHashMap, text: unicode, columnNumber: int, lineNumber: int): ...



    def equals(self, __a0: object) -> bool: ...

    def getAttribute(self, key: unicode) -> unicode: ...

    def getAttributes(self) -> java.util.LinkedHashMap: ...

    def getClass(self) -> java.lang.Class: ...

    def getColumnNumber(self) -> int: ...

    def getLevel(self) -> int: ...

    def getLineNumber(self) -> int: ...

    def getName(self) -> unicode: ...

    def getText(self) -> unicode: ...

    def hasAttribute(self, key: unicode) -> bool: ...

    def hashCode(self) -> int: ...

    def isContent(self) -> bool: ...

    def isEnd(self) -> bool: ...

    def isStart(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setAttribute(self, key: unicode, value: unicode) -> None: ...

    @staticmethod
    def splitEmptyElement(element: ghidra.xml.XmlElementImpl) -> List[ghidra.xml.XmlElement]: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def attributes(self) -> java.util.LinkedHashMap: ...

    @property
    def columnNumber(self) -> int: ...

    @property
    def content(self) -> bool: ...

    @property
    def end(self) -> bool: ...

    @property
    def level(self) -> int: ...

    @property
    def lineNumber(self) -> int: ...

    @property
    def name(self) -> unicode: ...

    @property
    def start(self) -> bool: ...

    @property
    def text(self) -> unicode: ...
