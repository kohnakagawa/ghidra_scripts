from typing import List
import ghidra.feature.fid.db
import ghidra.feature.fid.hash
import java.io
import java.lang


class FidQueryService(object, java.io.Closeable):








    def addCloseListener(self, __a0: ghidra.feature.fid.db.FidQueryCloseListener) -> None: ...

    def close(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def findFullHashValueAtOrAfter(self, __a0: long) -> long: ...

    def findFunctionsByDomainPathSubstring(self, __a0: unicode) -> List[object]: ...

    def findFunctionsByFullHash(self, __a0: long) -> List[object]: ...

    def findFunctionsByNameSubstring(self, __a0: unicode) -> List[object]: ...

    def findFunctionsBySpecificHash(self, __a0: long) -> List[object]: ...

    def getClass(self) -> java.lang.Class: ...

    def getFunctionByID(self, __a0: long) -> ghidra.feature.fid.db.FunctionRecord: ...

    def getInferiorFullRelation(self, __a0: ghidra.feature.fid.hash.FidHashQuad, __a1: ghidra.feature.fid.db.FunctionRecord) -> bool: ...

    def getLibraryForFunction(self, __a0: ghidra.feature.fid.db.FunctionRecord) -> ghidra.feature.fid.db.LibraryRecord: ...

    def getSuperiorFullRelation(self, __a0: ghidra.feature.fid.db.FunctionRecord, __a1: ghidra.feature.fid.hash.FidHashQuad) -> bool: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def removeCloseListener(self, __a0: ghidra.feature.fid.db.FidQueryCloseListener) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...
