from typing import List
import ghidra.feature.vt.api.main
import ghidra.program.model.address
import java.lang
import java.util


class VTAssociationManager(object):








    def equals(self, __a0: object) -> bool: ...

    def getAssociation(self, __a0: ghidra.program.model.address.Address, __a1: ghidra.program.model.address.Address) -> ghidra.feature.vt.api.main.VTAssociation: ...

    def getAssociationCount(self) -> int: ...

    def getAssociations(self) -> List[object]: ...

    def getClass(self) -> java.lang.Class: ...

    def getRelatedAssociationsByDestinationAddress(self, __a0: ghidra.program.model.address.Address) -> java.util.Collection: ...

    def getRelatedAssociationsBySourceAddress(self, __a0: ghidra.program.model.address.Address) -> java.util.Collection: ...

    def getRelatedAssociationsBySourceAndDestinationAddress(self, __a0: ghidra.program.model.address.Address, __a1: ghidra.program.model.address.Address) -> java.util.Collection: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def associationCount(self) -> int: ...

    @property
    def associations(self) -> List[object]: ...
