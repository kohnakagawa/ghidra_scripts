import ghidra.app.plugin.exceptionhandlers.gcc
import ghidra.program.model.address
import java.lang


class LSDATypeTable(ghidra.app.plugin.exceptionhandlers.gcc.GccAnalysisClass):




    def __init__(self, __a0: ghidra.util.task.TaskMonitor, __a1: ghidra.program.model.listing.Program, __a2: ghidra.app.plugin.exceptionhandlers.gcc.RegionDescriptor): ...



    def create(self, __a0: ghidra.program.model.address.Address, __a1: ghidra.program.model.address.Address) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getNextAddress(self) -> ghidra.program.model.address.Address: ...

    def getTypeInfoAddress(self, __a0: int) -> ghidra.program.model.address.Address: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def nextAddress(self) -> ghidra.program.model.address.Address: ...
