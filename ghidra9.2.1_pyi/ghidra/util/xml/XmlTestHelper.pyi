import ghidra.base.project
import ghidra.program.model.listing
import ghidra.xml
import java.io
import java.lang


class XmlTestHelper(object):




    @overload
    def __init__(self, tmpDirPath: unicode): ...

    @overload
    def __init__(self, tmpDirPath: unicode, gp: ghidra.base.project.GhidraProject): ...



    def add(self, xml: unicode) -> None: ...

    @overload
    @staticmethod
    def assertXMLFilesEquals(expectedXMLParser: ghidra.xml.XmlPullParser, testXMLParser: ghidra.xml.XmlPullParser) -> None: ...

    @overload
    @staticmethod
    def assertXMLFilesEquals(expectedXMLFile: java.io.File, testXMLFile: java.io.File) -> None: ...

    def clearXml(self) -> None: ...

    def compareXml(self, file: java.io.File) -> None: ...

    def containsXml(self, line: unicode) -> bool: ...

    def dispose(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getProject(self) -> ghidra.base.project.GhidraProject: ...

    def getTempFile(self, name: unicode) -> java.io.File: ...

    def getXmlParser(self, name: unicode) -> ghidra.xml.XmlPullParser: ...

    def hashCode(self) -> int: ...

    def loadResourceProgram(self, programName: unicode) -> ghidra.program.model.listing.Program: ...

    def loadXmlResource(self, pkg: java.lang.Package, name: unicode) -> None:
        """
        Read an XML file as a resource.
        @param pkg where resource resides
        @param name name of the resource that is in the given package
        @throws IOException thrown if there was a problem accessing the xml resource.
        """
        ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def printExpectedLines(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def project(self) -> ghidra.base.project.GhidraProject: ...
