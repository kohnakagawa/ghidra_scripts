import ghidra.app.plugin.core.format
import java.lang


class ByteBlockSelection(object):




    @overload
    def __init__(self): ...

    @overload
    def __init__(self, __a0: List[ghidra.app.plugin.core.format.ByteBlockRange]): ...



    def add(self, __a0: ghidra.app.plugin.core.format.ByteBlockRange) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getNumberOfRanges(self) -> int: ...

    def getRange(self, __a0: int) -> ghidra.app.plugin.core.format.ByteBlockRange: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def numberOfRanges(self) -> int: ...
