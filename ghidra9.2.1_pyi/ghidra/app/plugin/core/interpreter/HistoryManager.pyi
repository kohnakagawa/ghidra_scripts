import java.lang


class HistoryManager(object):








    def addHistory(self, __a0: unicode) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getHistoryDown(self) -> unicode: ...

    def getHistoryUp(self) -> unicode: ...

    def getRetention(self) -> int: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setRetention(self, __a0: int) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def historyDown(self) -> unicode: ...

    @property
    def historyUp(self) -> unicode: ...

    @property
    def retention(self) -> int: ...

    @retention.setter
    def retention(self, value: int) -> None: ...
