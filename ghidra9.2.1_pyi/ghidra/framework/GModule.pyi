from typing import List
import generic.jar
import java.lang
import java.util


class GModule(object):




    def __init__(self, appRoots: java.util.Collection, moduleRoot: generic.jar.ResourceFile): ...



    def accumulateDataFilesByExtension(self, __a0: List[object], __a1: unicode) -> None: ...

    def collectExistingModuleDirs(self, __a0: List[object], __a1: unicode) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def findModuleFile(self, relativeDataFilePath: unicode) -> generic.jar.ResourceFile: ...

    def getClass(self) -> java.lang.Class: ...

    def getFatJars(self) -> java.util.Set: ...

    def getModuleRoot(self) -> generic.jar.ResourceFile: ...

    def getName(self) -> unicode: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def fatJars(self) -> java.util.Set: ...

    @property
    def moduleRoot(self) -> generic.jar.ResourceFile: ...

    @property
    def name(self) -> unicode: ...
