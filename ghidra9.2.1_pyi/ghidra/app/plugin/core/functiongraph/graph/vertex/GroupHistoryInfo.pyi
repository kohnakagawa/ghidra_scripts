import ghidra.app.plugin.core.functiongraph.graph
import ghidra.app.plugin.core.functiongraph.graph.vertex
import java.awt.geom
import java.lang
import java.util
import org.jdom


class GroupHistoryInfo(object):




    @overload
    def __init__(self, __a0: ghidra.app.plugin.core.functiongraph.graph.FunctionGraph, __a1: ghidra.app.plugin.core.functiongraph.graph.vertex.GroupedFunctionGraphVertex): ...

    @overload
    def __init__(self, __a0: ghidra.app.plugin.core.functiongraph.mvc.FGController, __a1: org.jdom.Element): ...



    def contains(self, __a0: ghidra.app.plugin.core.functiongraph.graph.vertex.FGVertex) -> bool: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getGroupDescription(self) -> unicode: ...

    def getGroupLocation(self) -> java.awt.geom.Point2D: ...

    def getVertices(self) -> java.util.Set: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def removeVertex(self, __a0: ghidra.app.plugin.core.functiongraph.graph.vertex.FGVertex) -> None: ...

    def setGroupDescription(self, __a0: unicode) -> None: ...

    def toString(self) -> unicode: ...

    def toXML(self, __a0: ghidra.app.plugin.core.functiongraph.graph.FunctionGraph) -> org.jdom.Element: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def groupDescription(self) -> unicode: ...

    @groupDescription.setter
    def groupDescription(self, value: unicode) -> None: ...

    @property
    def groupLocation(self) -> java.awt.geom.Point2D: ...

    @property
    def vertices(self) -> java.util.Set: ...
