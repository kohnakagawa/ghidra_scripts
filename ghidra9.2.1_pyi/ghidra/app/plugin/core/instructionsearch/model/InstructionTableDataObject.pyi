import ghidra.app.plugin.core.instructionsearch.model
import ghidra.app.plugin.core.instructionsearch.ui
import java.awt
import java.lang
import javax.swing.border


class InstructionTableDataObject(object):




    def __init__(self, __a0: unicode, __a1: bool, __a2: ghidra.app.plugin.core.instructionsearch.ui.AbstractInstructionTable.OperandState): ...



    def equals(self, __a0: object) -> bool: ...

    def getBackgroundColor(self) -> java.awt.Color: ...

    def getBorder(self) -> javax.swing.border.Border: ...

    def getClass(self) -> java.lang.Class: ...

    def getData(self) -> unicode: ...

    def getFontStyle(self) -> int: ...

    def getForegroundColor(self) -> java.awt.Color: ...

    def getOperandCase(self) -> ghidra.app.plugin.core.instructionsearch.model.OperandMetadata: ...

    def getState(self) -> ghidra.app.plugin.core.instructionsearch.ui.AbstractInstructionTable.OperandState: ...

    def hashCode(self) -> int: ...

    def isInstruction(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def register(self, __a0: ghidra.app.plugin.core.instructionsearch.model.InstructionTableObserver) -> None: ...

    def setData(self, __a0: unicode) -> None: ...

    def setOperandCase(self, __a0: ghidra.app.plugin.core.instructionsearch.model.OperandMetadata) -> None: ...

    def setState(self, __a0: ghidra.app.plugin.core.instructionsearch.ui.AbstractInstructionTable.OperandState, __a1: bool) -> None: ...

    def toString(self) -> unicode: ...

    def toggleMaskState(self) -> None: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def backgroundColor(self) -> java.awt.Color: ...

    @property
    def border(self) -> javax.swing.border.Border: ...

    @property
    def data(self) -> unicode: ...

    @data.setter
    def data(self, value: unicode) -> None: ...

    @property
    def fontStyle(self) -> int: ...

    @property
    def foregroundColor(self) -> java.awt.Color: ...

    @property
    def instruction(self) -> bool: ...

    @property
    def operandCase(self) -> ghidra.app.plugin.core.instructionsearch.model.OperandMetadata: ...

    @operandCase.setter
    def operandCase(self, value: ghidra.app.plugin.core.instructionsearch.model.OperandMetadata) -> None: ...

    @property
    def state(self) -> ghidra.app.plugin.core.instructionsearch.ui.AbstractInstructionTable.OperandState: ...
