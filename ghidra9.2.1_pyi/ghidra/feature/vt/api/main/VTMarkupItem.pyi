import ghidra.feature.vt.api.main
import ghidra.feature.vt.api.markuptype
import ghidra.feature.vt.api.util
import ghidra.framework.options
import ghidra.program.model.address
import ghidra.program.util
import java.lang


class VTMarkupItem(object):
    DATA_ADDRESS_SOURCE: unicode = u'Data'
    FUNCTION_ADDRESS_SOURCE: unicode = u'Function'
    USER_DEFINED_ADDRESS_SOURCE: unicode = u'User Defined'







    def apply(self, __a0: ghidra.feature.vt.api.main.VTMarkupItemApplyActionType, __a1: ghidra.framework.options.ToolOptions) -> None: ...

    def canApply(self) -> bool: ...

    def canUnapply(self) -> bool: ...

    def equals(self, __a0: object) -> bool: ...

    def getAssociation(self) -> ghidra.feature.vt.api.main.VTAssociation: ...

    def getClass(self) -> java.lang.Class: ...

    def getCurrentDestinationValue(self) -> ghidra.feature.vt.api.util.Stringable: ...

    def getDestinationAddress(self) -> ghidra.program.model.address.Address: ...

    def getDestinationAddressEditStatus(self) -> ghidra.feature.vt.api.main.VTMarkupItemDestinationAddressEditStatus: ...

    def getDestinationAddressSource(self) -> unicode: ...

    def getDestinationLocation(self) -> ghidra.program.util.ProgramLocation: ...

    def getMarkupType(self) -> ghidra.feature.vt.api.markuptype.VTMarkupType: ...

    def getOriginalDestinationValue(self) -> ghidra.feature.vt.api.util.Stringable: ...

    def getSourceAddress(self) -> ghidra.program.model.address.Address: ...

    def getSourceLocation(self) -> ghidra.program.util.ProgramLocation: ...

    def getSourceValue(self) -> ghidra.feature.vt.api.util.Stringable: ...

    def getStatus(self) -> ghidra.feature.vt.api.main.VTMarkupItemStatus: ...

    def getStatusDescription(self) -> unicode: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setConsidered(self, __a0: ghidra.feature.vt.api.main.VTMarkupItemConsideredStatus) -> None: ...

    def setDefaultDestinationAddress(self, __a0: ghidra.program.model.address.Address, __a1: unicode) -> None: ...

    def setDestinationAddress(self, __a0: ghidra.program.model.address.Address) -> None: ...

    def supportsApplyAction(self, __a0: ghidra.feature.vt.api.main.VTMarkupItemApplyActionType) -> bool: ...

    def toString(self) -> unicode: ...

    def unapply(self) -> None: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def association(self) -> ghidra.feature.vt.api.main.VTAssociation: ...

    @property
    def considered(self) -> None: ...  # No getter available.

    @considered.setter
    def considered(self, value: ghidra.feature.vt.api.main.VTMarkupItemConsideredStatus) -> None: ...

    @property
    def currentDestinationValue(self) -> ghidra.feature.vt.api.util.Stringable: ...

    @property
    def destinationAddress(self) -> ghidra.program.model.address.Address: ...

    @destinationAddress.setter
    def destinationAddress(self, value: ghidra.program.model.address.Address) -> None: ...

    @property
    def destinationAddressEditStatus(self) -> ghidra.feature.vt.api.main.VTMarkupItemDestinationAddressEditStatus: ...

    @property
    def destinationAddressSource(self) -> unicode: ...

    @property
    def destinationLocation(self) -> ghidra.program.util.ProgramLocation: ...

    @property
    def markupType(self) -> ghidra.feature.vt.api.markuptype.VTMarkupType: ...

    @property
    def originalDestinationValue(self) -> ghidra.feature.vt.api.util.Stringable: ...

    @property
    def sourceAddress(self) -> ghidra.program.model.address.Address: ...

    @property
    def sourceLocation(self) -> ghidra.program.util.ProgramLocation: ...

    @property
    def sourceValue(self) -> ghidra.feature.vt.api.util.Stringable: ...

    @property
    def status(self) -> ghidra.feature.vt.api.main.VTMarkupItemStatus: ...

    @property
    def statusDescription(self) -> unicode: ...
