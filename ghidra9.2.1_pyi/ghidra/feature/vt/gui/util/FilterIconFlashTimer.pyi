from typing import List
import java.awt.event
import java.lang
import java.util
import javax.swing


class FilterIconFlashTimer(javax.swing.Timer, java.awt.event.ActionListener):




    def __init__(self, __a0: javax.swing.Icon, __a1: javax.swing.Icon, __a2: ghidra.feature.vt.gui.filters.AncillaryFilterDialogComponentProvider, __a3: javax.swing.JButton): ...



    def actionPerformed(self, __a0: java.awt.event.ActionEvent) -> None: ...

    def addActionListener(self, __a0: java.awt.event.ActionListener) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getActionCommand(self) -> unicode: ...

    def getActionListeners(self) -> List[java.awt.event.ActionListener]: ...

    def getClass(self) -> java.lang.Class: ...

    def getDelay(self) -> int: ...

    def getInitialDelay(self) -> int: ...

    def getListeners(self, __a0: java.lang.Class) -> List[java.util.EventListener]: ...

    @staticmethod
    def getLogTimers() -> bool: ...

    def hashCode(self) -> int: ...

    def isCoalesce(self) -> bool: ...

    def isRepeats(self) -> bool: ...

    def isRunning(self) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def removeActionListener(self, __a0: java.awt.event.ActionListener) -> None: ...

    def restart(self) -> None: ...

    def setActionCommand(self, __a0: unicode) -> None: ...

    def setCoalesce(self, __a0: bool) -> None: ...

    def setDelay(self, __a0: int) -> None: ...

    def setInitialDelay(self, __a0: int) -> None: ...

    @staticmethod
    def setLogTimers(__a0: bool) -> None: ...

    def setRepeats(self, __a0: bool) -> None: ...

    def start(self) -> None: ...

    def stop(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...
