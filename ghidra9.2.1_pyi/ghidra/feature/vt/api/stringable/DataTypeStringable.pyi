import ghidra.feature.vt.api.util
import ghidra.program.model.data
import ghidra.program.model.listing
import java.lang


class DataTypeStringable(ghidra.feature.vt.api.util.Stringable):
    SHORT_NAME: unicode = u'DT'



    @overload
    def __init__(self): ...

    @overload
    def __init__(self, __a0: ghidra.program.model.data.DataType, __a1: ghidra.program.model.data.DataTypeManager, __a2: int): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getDataType(self, __a0: ghidra.program.model.data.DataTypeManager) -> ghidra.program.model.data.DataType: ...

    def getDataTypeID(self) -> long: ...

    def getDataTypeManagerID(self) -> long: ...

    def getDataTypeName(self) -> unicode: ...

    def getDisplayString(self) -> unicode: ...

    def getLength(self) -> int: ...

    @staticmethod
    def getString(__a0: ghidra.feature.vt.api.util.Stringable, __a1: ghidra.program.model.listing.Program) -> unicode: ...

    @staticmethod
    def getStringable(__a0: unicode, __a1: ghidra.program.model.listing.Program) -> ghidra.feature.vt.api.util.Stringable: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def dataTypeID(self) -> long: ...

    @property
    def dataTypeManagerID(self) -> long: ...

    @property
    def dataTypeName(self) -> unicode: ...

    @property
    def displayString(self) -> unicode: ...

    @property
    def length(self) -> int: ...
