from typing import List
import java.awt.datatransfer
import java.lang


class GroupTransferable(object, java.awt.datatransfer.Transferable):
    localGroupFlavor: java.awt.datatransfer.DataFlavor



    @overload
    def __init__(self, __a0: unicode): ...

    @overload
    def __init__(self, __a0: ghidra.program.model.listing.Group): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getTransferData(self, __a0: java.awt.datatransfer.DataFlavor) -> object: ...

    def getTransferDataFlavors(self) -> List[java.awt.datatransfer.DataFlavor]: ...

    def hashCode(self) -> int: ...

    def isDataFlavorSupported(self, __a0: java.awt.datatransfer.DataFlavor) -> bool: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def transferDataFlavors(self) -> List[java.awt.datatransfer.DataFlavor]: ...
