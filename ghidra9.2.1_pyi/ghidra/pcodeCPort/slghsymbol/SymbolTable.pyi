import generic.stl
import ghidra.pcodeCPort.sleighbase
import ghidra.pcodeCPort.slghsymbol
import java.io
import java.lang
import org.jdom


class SymbolTable(object):




    def __init__(self): ...



    def addGlobalSymbol(self, __a0: ghidra.pcodeCPort.slghsymbol.SleighSymbol) -> None: ...

    def addScope(self) -> None: ...

    def addSymbol(self, __a0: ghidra.pcodeCPort.slghsymbol.SleighSymbol) -> int: ...

    def dispose(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def findGlobalSymbol(self, __a0: unicode) -> ghidra.pcodeCPort.slghsymbol.SleighSymbol: ...

    @overload
    def findSymbol(self, __a0: int) -> ghidra.pcodeCPort.slghsymbol.SleighSymbol: ...

    @overload
    def findSymbol(self, __a0: unicode) -> ghidra.pcodeCPort.slghsymbol.SleighSymbol: ...

    @overload
    def findSymbol(self, __a0: unicode, __a1: int) -> ghidra.pcodeCPort.slghsymbol.SleighSymbol: ...

    def getClass(self) -> java.lang.Class: ...

    def getCurrentScope(self) -> ghidra.pcodeCPort.slghsymbol.SymbolScope: ...

    def getGlobalScope(self) -> ghidra.pcodeCPort.slghsymbol.SymbolScope: ...

    def getUnsoughtSymbols(self) -> generic.stl.VectorSTL: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def popScope(self) -> None: ...

    def purge(self) -> None: ...

    def replaceSymbol(self, __a0: ghidra.pcodeCPort.slghsymbol.SleighSymbol, __a1: ghidra.pcodeCPort.slghsymbol.SleighSymbol) -> None: ...

    def restoreSymbolHeader(self, __a0: org.jdom.Element) -> None: ...

    def restoreXml(self, __a0: org.jdom.Element, __a1: ghidra.pcodeCPort.sleighbase.SleighBase) -> None: ...

    def saveXml(self, __a0: java.io.PrintStream) -> None: ...

    def setCurrentScope(self, __a0: ghidra.pcodeCPort.slghsymbol.SymbolScope) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def currentScope(self) -> ghidra.pcodeCPort.slghsymbol.SymbolScope: ...

    @currentScope.setter
    def currentScope(self, value: ghidra.pcodeCPort.slghsymbol.SymbolScope) -> None: ...

    @property
    def globalScope(self) -> ghidra.pcodeCPort.slghsymbol.SymbolScope: ...

    @property
    def unsoughtSymbols(self) -> generic.stl.VectorSTL: ...
