import ghidra.feature.vt.api.util
import ghidra.program.model.listing
import ghidra.program.model.symbol
import java.lang


class FunctionNameStringable(ghidra.feature.vt.api.util.Stringable):
    SHORT_NAME: unicode = u'FUN_SYM'



    @overload
    def __init__(self): ...

    @overload
    def __init__(self, __a0: ghidra.program.model.symbol.Symbol): ...



    def addFunctionName(self, __a0: ghidra.program.model.listing.Program, __a1: ghidra.program.model.listing.Function, __a2: bool) -> None: ...

    def applyFunctionName(self, __a0: ghidra.program.model.listing.Program, __a1: ghidra.program.model.listing.Function) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getDisplayString(self) -> unicode: ...

    @staticmethod
    def getString(__a0: ghidra.feature.vt.api.util.Stringable, __a1: ghidra.program.model.listing.Program) -> unicode: ...

    @staticmethod
    def getStringable(__a0: unicode, __a1: ghidra.program.model.listing.Program) -> ghidra.feature.vt.api.util.Stringable: ...

    def getSymbolName(self) -> unicode: ...

    def getSymbolSourceType(self) -> ghidra.program.model.symbol.SourceType: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def displayString(self) -> unicode: ...

    @property
    def symbolName(self) -> unicode: ...

    @property
    def symbolSourceType(self) -> ghidra.program.model.symbol.SourceType: ...
