from typing import List
import docking
import docking.action
import docking.actions
import ghidra.app.plugin.core.functioncompare
import ghidra.app.services
import ghidra.framework.options
import ghidra.framework.plugintool
import ghidra.program.model.listing
import ghidra.util
import java.awt.event
import java.lang
import java.util
import javax.swing


class FunctionComparisonProvider(ghidra.framework.plugintool.ComponentProviderAdapter, docking.actions.PopupActionProvider, ghidra.app.plugin.core.functioncompare.FunctionComparisonModelListener):




    @overload
    def __init__(self, __a0: ghidra.framework.plugintool.Plugin, __a1: unicode, __a2: unicode): ...

    @overload
    def __init__(self, __a0: ghidra.framework.plugintool.Plugin, __a1: unicode, __a2: unicode, __a3: java.lang.Class): ...



    def addLocalAction(self, __a0: docking.action.DockingActionIf) -> None: ...

    def addToTool(self) -> None: ...

    def closeComponent(self) -> None: ...

    def componentActivated(self) -> None: ...

    def componentDeactived(self) -> None: ...

    def componentHidden(self) -> None: ...

    def componentShown(self) -> None: ...

    def contextChanged(self) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getActionContext(self, __a0: java.awt.event.MouseEvent) -> docking.ActionContext: ...

    def getClass(self) -> java.lang.Class: ...

    def getComponent(self) -> javax.swing.JComponent: ...

    def getContextType(self) -> java.lang.Class: ...

    def getDefaultWindowPosition(self) -> docking.WindowPosition: ...

    def getHelpInfo(self) -> unicode: ...

    def getHelpLocation(self) -> ghidra.util.HelpLocation: ...

    def getHelpObject(self) -> object: ...

    def getIcon(self) -> javax.swing.Icon: ...

    def getInstanceID(self) -> long: ...

    def getIntraGroupPosition(self) -> docking.WindowPosition: ...

    @staticmethod
    def getMappedName(__a0: unicode, __a1: unicode) -> unicode: ...

    @staticmethod
    def getMappedOwner(__a0: unicode, __a1: unicode) -> unicode: ...

    def getModel(self) -> ghidra.app.services.FunctionComparisonModel: ...

    def getName(self) -> unicode: ...

    def getOwner(self) -> unicode: ...

    def getPopupActions(self, __a0: docking.Tool, __a1: docking.ActionContext) -> List[object]: ...

    def getSubTitle(self) -> unicode: ...

    def getTabText(self) -> unicode: ...

    def getTitle(self) -> unicode: ...

    def getTool(self) -> docking.Tool: ...

    def getWindowGroup(self) -> unicode: ...

    def getWindowSubMenuName(self) -> unicode: ...

    def hashCode(self) -> int: ...

    def isActive(self) -> bool: ...

    def isFocusedProvider(self) -> bool: ...

    def isInTool(self) -> bool: ...

    def isSnapshot(self) -> bool: ...

    def isTransient(self) -> bool: ...

    def isVisible(self) -> bool: ...

    def modelChanged(self, __a0: List[object]) -> None: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def programClosed(self, __a0: ghidra.program.model.listing.Program) -> None: ...

    def programRestored(self, __a0: ghidra.program.model.listing.Program) -> None: ...

    def readConfigState(self, __a0: ghidra.framework.options.SaveState) -> None: ...

    @staticmethod
    def registerProviderNameOwnerChange(__a0: unicode, __a1: unicode, __a2: unicode, __a3: unicode) -> None: ...

    def removeFromTool(self) -> None: ...

    @overload
    def removeFunctions(self, __a0: ghidra.program.model.listing.Program) -> None: ...

    @overload
    def removeFunctions(self, __a0: java.util.Set) -> None: ...

    def requestFocus(self) -> None: ...

    def setHelpLocation(self, __a0: ghidra.util.HelpLocation) -> None: ...

    def setIntraGroupPosition(self, __a0: docking.WindowPosition) -> None: ...

    def setModel(self, __a0: ghidra.app.services.FunctionComparisonModel) -> None: ...

    def setSubTitle(self, __a0: unicode) -> None: ...

    def setTabText(self, __a0: unicode) -> None: ...

    def setTitle(self, __a0: unicode) -> None: ...

    def setVisible(self, __a0: bool) -> None: ...

    def toFront(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    def writeConfigState(self, __a0: ghidra.framework.options.SaveState) -> None: ...

    @property
    def component(self) -> ghidra.app.plugin.core.functioncompare.FunctionComparisonPanel: ...

    @property
    def model(self) -> ghidra.app.services.FunctionComparisonModel: ...

    @model.setter
    def model(self, value: ghidra.app.services.FunctionComparisonModel) -> None: ...
