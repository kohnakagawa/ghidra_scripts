from typing import List
import ghidra.docking.settings
import java.lang


class FunctionNoReturnSettingsDefinition(object, ghidra.docking.settings.BooleanSettingsDefinition):
    DEF: ghidra.util.table.field.FunctionNoReturnSettingsDefinition = ghidra.util.table.field.FunctionNoReturnSettingsDefinition@207f1da3



    def __init__(self): ...



    def clear(self, settings: ghidra.docking.settings.Settings) -> None: ...

    @staticmethod
    def concat(__a0: List[ghidra.docking.settings.SettingsDefinition], __a1: List[ghidra.docking.settings.SettingsDefinition]) -> List[ghidra.docking.settings.SettingsDefinition]: ...

    def copySetting(self, srcSettings: ghidra.docking.settings.Settings, destSettings: ghidra.docking.settings.Settings) -> None: ...

    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getDescription(self) -> unicode: ...

    def getName(self) -> unicode: ...

    def getValue(self, settings: ghidra.docking.settings.Settings) -> bool: ...

    def hasValue(self, settings: ghidra.docking.settings.Settings) -> bool: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def setValue(self, settings: ghidra.docking.settings.Settings, value: bool) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def description(self) -> unicode: ...

    @property
    def name(self) -> unicode: ...
