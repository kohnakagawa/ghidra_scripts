import ghidra.framework.model
import java.lang


class VersionTrackingChangeRecord(ghidra.framework.model.DomainObjectChangeRecord):




    def __init__(self, __a0: int, __a1: object, __a2: object, __a3: object): ...



    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getEventType(self) -> int: ...

    def getNewValue(self) -> object: ...

    def getObject(self) -> object: ...

    def getOldValue(self) -> object: ...

    def getSubEventType(self) -> int: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def object(self) -> object: ...
