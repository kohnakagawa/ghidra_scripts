from typing import List
import ghidra.bitpatterns.gui
import ghidra.bitpatterns.info
import java.awt
import java.lang


class ClosedPatternRowObject(object):








    def equals(self, __a0: object) -> bool: ...

    def getClass(self) -> java.lang.Class: ...

    def getDittedString(self) -> unicode: ...

    def getNumFixedBits(self) -> int: ...

    def getNumOccurrences(self) -> int: ...

    def getPatternInfo(self) -> ghidra.bitpatterns.gui.PatternInfoRowObject: ...

    def getPercentage(self) -> float: ...

    def hashCode(self) -> int: ...

    @staticmethod
    def mineClosedPatterns(__a0: List[object], __a1: float, __a2: int, __a3: bool, __a4: ghidra.bitpatterns.info.PatternType, __a5: ghidra.bitpatterns.info.ContextRegisterFilter, __a6: java.awt.Component) -> List[object]: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def dittedString(self) -> unicode: ...

    @property
    def numFixedBits(self) -> int: ...

    @property
    def numOccurrences(self) -> int: ...

    @property
    def patternInfo(self) -> ghidra.bitpatterns.gui.PatternInfoRowObject: ...

    @property
    def percentage(self) -> float: ...
